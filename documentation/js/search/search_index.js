var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.303,1,2.264]],["body/controllers/AppController.html",[0,2.046,1,3.557,2,1.614,3,0.295,4,0.256,5,0.256,6,3.551,7,2.55,8,0.026,9,0.603,10,1.566,11,6.15,12,1.729,13,0.762,14,4.199,15,1.235,16,4.503,17,1.808,18,1.673,19,4.503,20,5.848,21,0.374,22,0.554,23,5.325,24,1.41,25,0.295,26,0.044,27,1.235,28,5.325,29,5.325,30,4.199,31,0.02,32,0.02]],["title/modules/AppModule.html",[33,0.761,34,2.264]],["body/modules/AppModule.html",[1,3.373,2,1.683,3,0.22,4,0.191,5,0.191,8,0.026,21,0.456,22,0.413,25,0.22,26,0.033,31,0.016,32,0.016,33,1.134,34,4.559,35,1.125,36,1.125,37,1.29,38,1.29,39,1.125,40,1.29,41,1.29,42,2.649,43,2.649,44,3.32,45,3.621,46,3.32,47,2.836,48,3.621,49,3.32,50,3.32,51,3.062,52,1.803,53,1.29,54,1.29,55,3.132,56,2.249,57,3.132,58,2.649,59,3.132,60,3.132,61,3.132,62,3.132,63,1.902,64,1.608,65,2.649,66,3.132,67,3.132,68,3.132,69,3.132,70,3.132]],["title/controllers/AuthController.html",[0,1.303,71,2.264]],["body/controllers/AuthController.html",[0,1.055,2,1.055,3,0.193,4,0.168,5,0.168,7,1.668,8,0.026,9,0.394,10,1.173,12,1.642,13,0.723,15,1.173,17,1.678,18,1.719,21,0.362,22,0.362,24,0.922,25,0.193,26,0.029,27,1.173,31,0.015,32,0.015,63,3.129,71,2.663,72,2.322,73,2.746,74,2.801,75,2.801,76,2.322,77,3.523,78,3.466,79,4.708,80,2.746,81,2.746,82,2.746,83,1.896,84,3.441,85,3.372,86,2.746,87,3.988,88,2.122,89,4.357,90,2.746,91,1.339,92,0.836,93,0.867,94,1.173,95,4.07,96,2.322,97,2.746,98,2.746,99,2.746,100,2.746,101,3.372,102,3.372,103,2.746,104,2.322,105,2.614,106,2.322,107,2.043,108,3.97,109,3.97,110,3.493,111,2.663,112,3.136,113,1.834,114,2.746,115,2.746,116,1.834,117,1.529,118,1.834,119,1.41,120,1.668,121,2.746,122,2.663,123,2.746,124,2.746,125,2.746,126,2.746,127,2.746,128,2.746,129,2.746]],["title/modules/AuthModule.html",[33,0.761,44,1.887]],["body/modules/AuthModule.html",[2,1.677,3,0.219,4,0.19,5,0.19,8,0.026,21,0.451,22,0.411,25,0.219,26,0.033,31,0.016,32,0.016,33,1.131,35,1.119,36,1.119,37,1.283,38,1.283,39,1.119,40,2.073,41,2.073,44,3.772,47,2.831,49,3.314,50,3.314,51,3.056,52,1.797,53,1.283,54,1.283,56,2.24,64,1.6,65,2.634,71,3.363,105,3.646,106,2.634,130,2.634,131,2.634,132,3.115,133,2.634,134,3.363,135,3.115,136,3.115,137,4.363,138,2.081,139,3.115,140,2.081,141,2.317,142,2.634,143,2.634,144,1.892,145,3.115,146,3.115]],["title/injectables/AuthService.html",[105,1.887,147,0.661]],["body/injectables/AuthService.html",[3,0.116,4,0.101,5,0.101,8,0.026,9,0.237,10,0.792,13,0.842,15,1.274,17,1.8,21,0.381,22,0.218,25,0.189,26,0.017,27,1.274,31,0.01,32,0.01,63,1.004,64,0.849,74,2.209,75,2.209,76,2.278,78,3.443,79,4.291,83,1.361,85,1.398,88,1.404,89,2.278,91,1.56,92,1.07,93,0.781,94,1.366,95,2.004,96,2.278,101,2.278,102,1.398,105,1.5,107,1.23,134,2.515,140,1.104,142,1.398,147,0.526,148,0.635,149,1.23,150,3.911,151,2.175,152,3.41,153,2.694,154,2.694,155,1.384,156,1.23,157,2.209,158,2.515,159,2.278,160,3.326,161,2.278,162,2.019,163,1.653,164,1.653,165,3.41,166,5.67,167,1.653,168,2.004,169,2.694,170,1.653,171,1.653,172,2.694,173,1.653,174,1.653,175,1.622,176,1.653,177,1.653,178,0.681,179,0.519,180,2.004,181,1.23,182,1.23,183,1.398,184,1.653,185,1.653,186,1.282,187,0.849,188,3.006,189,1.104,190,1.004,191,1.653,192,1.653,193,4.592,194,1.653,195,1.653,196,1.653,197,1.653,198,1.653,199,1.653,200,1.653,201,1.653,202,1.653,203,1.653,204,1.653,205,1.653,206,3.41,207,1.653,208,1.653,209,2.175,210,1.653,211,1.384,212,3.326,213,3.933,214,1.653,215,1.636,216,2.694,217,0.92,218,1.653,219,1.11,220,1.653,221,0.681,222,1.653,223,2.278,224,1.398,225,3.326,226,1.653,227,1.636,228,1.398,229,1.653,230,1.653,231,1.398,232,1.653,233,1.653,234,2.694,235,1.653,236,2.278,237,1.653,238,2.694,239,0.731,240,3.326,241,2.627,242,3.41,243,2.694,244,1.653,245,1.653,246,2.278,247,1.398,248,1.653,249,2.694,250,2.694,251,1.653,252,1.653,253,1.653,254,1.653]],["title/classes/EventGateway.html",[26,0.036,255,1.887]],["body/classes/EventGateway.html",[3,0.244,4,0.213,5,0.213,8,0.026,9,0.5,10,1.385,12,1.939,13,0.968,15,1.385,16,2.943,21,0.402,22,0.459,25,0.244,26,0.036,27,1.023,31,0.017,32,0.017,91,1.169,92,0.729,93,0.586,94,1.023,117,3.428,175,1.655,188,1.787,255,2.622,256,1.538,257,2.943,258,1.939,259,5.324,260,1.691,261,4.709,262,5.337,263,3.48,264,3.48,265,4.709,266,3.48,267,3.183,268,5.337,269,3.48,270,3.48,271,2.324,272,3.48,273,3.48,274,4.709,275,2.943,276,2.943,277,1.787,278,1.938,279,2.324,280,3.48,281,3.48,282,3.48,283,3.48,284,2.324,285,3.48,286,3.48,287,3.48,288,3.48,289,4.709,290,2.943]],["title/controllers/FilesController.html",[0,1.303,291,2.264]],["body/controllers/FilesController.html",[0,0.914,2,0.914,3,0.167,4,0.145,5,0.396,7,1.445,8,0.026,9,0.342,10,1.055,12,1.477,13,0.651,15,1.055,17,1.775,18,1.767,21,0.395,22,0.314,24,0.799,25,0.167,26,0.025,27,1.055,31,0.013,32,0.013,77,3.017,78,2.918,84,2.883,91,1.204,92,0.904,93,0.912,94,1.055,104,2.012,108,3.033,109,3.033,110,2.668,111,2.396,112,2.883,113,1.589,116,1.589,117,1.325,118,1.589,119,1.222,120,1.445,122,2.396,190,1.445,239,1.585,241,1.589,260,0.854,267,1.325,271,1.589,277,1.222,278,1.325,279,1.589,284,1.589,291,2.396,292,2.012,293,2.38,294,3.65,295,3.65,296,2.38,297,2.286,298,4.031,299,4.063,300,2.38,301,2.38,302,2.38,303,3.033,304,2.012,305,2.38,306,4.805,307,2.38,308,2.38,309,3.587,310,4.359,311,3.587,312,3.587,313,2.38,314,2.38,315,2.38,316,1.706,317,2.38,318,2.012,319,2.38,320,3.587,321,2.38,322,3.587,323,2.38,324,2.38,325,1.77,326,2.396,327,2.403,328,2.012,329,2.396,330,2.38,331,2.668,332,2.38,333,2.668,334,2.38,335,2.668,336,2.38,337,2.38,338,1.77,339,2.38,340,2.38,341,2.38,342,2.38,343,2.38,344,2.38,345,2.38,346,2.38,347,2.38,348,2.38,349,2.38,350,2.38,351,2.38,352,2.38,353,2.38,354,2.38,355,3.587,356,2.38,357,2.38,358,2.38,359,2.38]],["title/modules/FilesModule.html",[33,0.761,45,2.058]],["body/modules/FilesModule.html",[2,1.931,3,0.27,4,0.234,5,0.234,8,0.026,21,0.445,22,0.506,25,0.27,26,0.04,31,0.019,32,0.019,33,1.259,35,1.378,36,1.378,37,1.58,38,1.58,39,1.378,40,2.307,41,1.58,44,3.525,45,3.974,52,2.069,53,1.58,54,1.58,56,2.58,291,3.742,325,2.855,326,2.563,327,3.525,328,3.245,360,3.245,361,3.837,362,3.245,363,3.837,364,3.837,365,3.837,366,3.837,367,5.025,368,3.837,369,3.837,370,3.837]],["title/injectables/FilesService.html",[147,0.661,327,1.887]],["body/injectables/FilesService.html",[3,0.219,4,0.191,5,0.308,8,0.026,9,0.448,10,1.285,13,0.915,15,1.285,17,1.865,21,0.404,22,0.412,25,0.219,26,0.033,27,1.285,31,0.016,32,0.016,77,2.807,78,3.317,91,1.693,92,1.248,93,0.919,94,1.483,119,1.604,134,2.805,147,0.853,148,1.2,151,2.453,155,1.604,159,2.92,175,1.486,209,1.286,294,3.696,295,3.696,297,2.399,298,3.751,299,4.619,304,3.696,318,2.641,326,2.086,327,2.434,371,2.641,372,3.124,373,3.124,374,4.371,375,3.124,376,3.124,377,3.124,378,3.124,379,3.124,380,2.641,381,2.641,382,3.124,383,3.124,384,3.124,385,3.124,386,4.264,387,3.124,388,3.124,389,3.124,390,3.124,391,3.124,392,3.124,393,3.124,394,3.124,395,3.124,396,3.124,397,3.124]],["title/modules/GatewayModule.html",[33,0.761,46,1.887]],["body/modules/GatewayModule.html",[3,0.311,4,0.27,5,0.27,8,0.025,21,0.386,22,0.584,25,0.311,26,0.046,31,0.02,32,0.02,33,1.345,35,1.588,36,1.588,37,1.821,38,1.821,39,1.588,40,2.266,41,2.466,46,3.589,52,2.266,53,1.821,54,1.821,255,3.749,398,3.74,399,3.74,400,4.423,401,4.423]],["title/injectables/JwtAuthGuard.html",[147,0.661,277,1.741]],["body/injectables/JwtAuthGuard.html",[3,0.341,4,0.296,5,0.296,8,0.025,21,0.409,22,0.64,25,0.341,26,0.051,31,0.022,32,0.022,138,3.239,147,1.136,148,1.863,277,2.989,278,2.7,402,4.1,403,2.989,404,5.82,405,4.849]],["title/injectables/JwtStrategy.html",[134,1.741,147,0.661]],["body/injectables/JwtStrategy.html",[3,0.172,4,0.15,5,0.15,8,0.026,9,0.352,10,1.078,13,0.884,15,1.292,17,1.838,21,0.399,22,0.323,25,0.172,26,0.026,27,1.292,31,0.014,32,0.014,83,1.38,91,1.637,92,1.148,93,0.982,94,1.434,107,1.823,134,1.882,138,1.636,140,1.636,147,0.715,148,0.942,150,2.934,151,2.256,155,1.882,156,1.823,157,2.606,159,3.659,160,4.123,161,2.934,162,2.504,175,1.744,181,1.823,183,2.072,186,1.744,188,2.256,209,1.51,211,2.256,212,2.072,217,2.041,219,1.51,221,1.51,223,3.1,224,2.072,225,3.1,228,3.1,231,2.072,236,2.072,240,3.1,241,2.449,246,3.1,247,2.072,267,1.364,297,1.744,403,1.882,406,2.072,407,3.666,408,3.666,409,3.666,410,3.666,411,2.45,412,3.666,413,4.876,414,2.45,415,3.666,416,2.45,417,3.666,418,2.45,419,4.393,420,2.072,421,2.45,422,2.45,423,2.45,424,2.072,425,2.45,426,2.45,427,2.45,428,2.45,429,1.316,430,2.45,431,2.45,432,2.45,433,2.45,434,2.45,435,2.45,436,2.45,437,2.45,438,2.45,439,2.45,440,2.45,441,2.45,442,2.45,443,2.45,444,3.666,445,2.45,446,2.45,447,2.45,448,1.488,449,4.393]],["title/modules/PrismaModule.html",[33,0.761,47,1.612]],["body/modules/PrismaModule.html",[3,0.3,4,0.261,5,0.261,8,0.025,21,0.378,22,0.564,25,0.3,26,0.045,31,0.02,32,0.02,33,1.325,35,1.536,36,1.536,37,1.761,38,1.761,39,1.536,40,2.429,41,2.429,47,3.146,52,2.218,53,1.761,54,1.761,450,3.616,451,3.616,452,3.616,453,3.531,454,4.276,455,4.276]],["title/injectables/PrismaService.html",[147,0.661,453,1.741]],["body/injectables/PrismaService.html",[3,0.313,4,0.272,5,0.272,8,0.026,9,0.64,10,1.626,13,0.808,15,1.311,21,0.388,22,0.588,25,0.313,26,0.047,31,0.021,32,0.021,147,1.079,148,1.713,151,2.475,179,1.4,209,1.835,258,1.835,259,5.567,403,2.839,453,2.839,456,3.769,457,6.01,458,4.457,459,4.457]],["title/controllers/ProfileController.html",[0,1.303,460,2.264]],["body/controllers/ProfileController.html",[0,1.172,2,1.172,3,0.214,4,0.186,5,0.186,7,1.852,8,0.026,9,0.438,10,1.264,12,1.77,13,0.78,15,1.264,18,1.698,21,0.427,22,0.402,24,1.024,25,0.214,26,0.032,27,1.264,31,0.016,32,0.016,83,1.909,84,3.61,91,1.443,92,0.901,93,0.723,94,1.264,95,4.398,110,3.197,111,2.871,112,3.325,113,2.037,116,2.037,117,1.698,118,2.037,119,1.566,120,1.852,122,2.871,179,0.958,271,2.037,277,1.566,278,1.698,279,2.037,284,2.037,331,4.02,333,3.197,335,3.197,338,2.269,460,2.871,461,2.579,462,3.05,463,4.398,464,3.05,465,2.579,466,3.05,467,5.912,468,3.05,469,3.46,470,2.579,471,2.571,472,3.05,473,3.05,474,3.05,475,4.298,476,2.771,477,2.579,478,2.579,479,2.579,480,3.05,481,3.05,482,3.05,483,3.05,484,3.05,485,3.05]],["title/modules/ProfileModule.html",[33,0.761,48,2.058]],["body/modules/ProfileModule.html",[2,1.948,3,0.273,4,0.237,5,0.237,8,0.026,21,0.435,22,0.513,25,0.273,26,0.041,31,0.019,32,0.019,33,1.267,35,1.396,36,1.396,37,1.601,38,1.601,39,1.396,40,2.322,41,1.601,46,3.538,48,4.065,51,3.263,52,2.087,53,1.601,54,1.601,56,2.603,143,3.288,460,3.767,476,3.538,477,3.288,486,3.288,487,3.288,488,3.889,489,3.889,490,3.889,491,3.889]],["title/injectables/ProfileService.html",[147,0.661,476,1.887]],["body/injectables/ProfileService.html",[3,0.239,4,0.208,5,0.208,8,0.026,9,0.489,10,1.365,13,0.958,15,1.365,21,0.417,22,0.45,25,0.239,26,0.036,27,1.365,31,0.017,32,0.017,77,3.156,83,1.968,91,1.773,92,1.106,93,0.888,94,1.553,147,0.906,148,1.31,150,3.101,151,2.52,155,2.384,156,2.536,157,2.911,175,2.208,179,1.071,181,2.536,209,1.912,255,3.156,290,4.465,463,3.454,469,2.819,470,3.926,471,2.696,476,2.585,479,2.882,492,2.882,493,4.643,494,3.409,495,4.643,496,3.409,497,3.409,498,3.409,499,3.409,500,3.409,501,3.409,502,3.409]],["title/modules/RedisModule.html",[33,0.761,49,1.887]],["body/modules/RedisModule.html",[3,0.263,4,0.229,5,0.229,8,0.026,21,0.43,22,0.495,25,0.263,26,0.039,31,0.018,32,0.018,33,1.245,35,1.347,36,1.347,37,1.544,38,1.544,39,1.347,40,2.282,41,2.282,49,3.572,52,2.038,53,1.544,54,1.544,56,1.926,93,0.631,151,1.544,161,3.306,162,3.465,209,1.544,239,1.658,503,3.171,504,3.171,505,3.171,506,3.75,507,3.75,508,3.75,509,3.171,510,3.682,511,3.75,512,4.95,513,2.79,514,3.75,515,3.75,516,3.171,517,3.75,518,3.75,519,3.75]],["title/injectables/RedisService.html",[147,0.661,162,1.741]],["body/injectables/RedisService.html",[3,0.196,4,0.17,5,0.17,8,0.026,9,0.4,10,1.185,13,1.041,15,1.525,17,1.843,21,0.283,22,0.368,25,0.196,26,0.029,27,0.819,31,0.015,32,0.015,91,1.742,92,1.087,93,0.926,94,1.525,120,1.692,147,0.786,148,1.071,150,1.861,151,2.642,155,1.431,162,2.431,175,1.917,188,1.431,209,2.136,260,1.447,297,2.618,298,3.521,420,2.356,429,1.7,510,2.072,513,4.4,520,2.356,521,4.734,522,5.503,523,4.734,524,4.734,525,2.786,526,2.786,527,2.786,528,4.029,529,2.786,530,6.172,531,4.029,532,2.786,533,4.029,534,4.506,535,5.736,536,2.786,537,2.786,538,2.072,539,2.786,540,2.786,541,2.786,542,2.786,543,2.786,544,4.734,545,2.786,546,2.786,547,2.786,548,2.786]],["title/injectables/SharpPipe.html",[147,0.661,329,2.264]],["body/injectables/SharpPipe.html",[3,0.279,4,0.242,5,0.242,8,0.026,9,0.57,10,1.51,13,0.72,15,1.167,21,0.4,22,0.524,25,0.279,26,0.042,27,1.167,31,0.019,32,0.019,91,1.333,92,0.832,93,0.668,94,1.167,147,1.002,148,1.525,151,2.345,168,3.821,188,2.638,209,1.634,258,1.634,303,4.816,310,3.356,329,3.431,381,4.343,549,3.356,550,5.137,551,5.137,552,5.695,553,3.969,554,5.137,555,4.343,556,5.137,557,3.969,558,2.41,559,3.969,560,3.969,561,3.969,562,3.969,563,3.969,564,3.969,565,3.969,566,3.969]],["title/controllers/SignHistoryController.html",[0,1.303,567,2.264]],["body/controllers/SignHistoryController.html",[0,1.333,2,1.333,3,0.244,4,0.212,5,0.212,7,2.107,8,0.026,9,0.498,10,1.382,12,1.429,13,0.629,15,1.02,18,1.674,21,0.432,22,0.458,24,1.165,25,0.244,26,0.036,27,1.02,31,0.017,32,0.017,63,3.736,64,2.413,83,1.794,84,3.139,91,1.165,92,0.727,93,0.584,94,1.02,111,3.139,112,3.139,113,2.317,116,2.317,117,1.932,118,2.317,119,1.782,120,2.107,122,2.317,144,2.854,158,2.736,179,1.09,182,2.581,271,2.317,277,1.782,278,1.932,279,2.317,284,2.317,331,3.496,333,3.496,335,3.496,338,2.581,465,2.934,469,3.236,478,2.934,567,3.139,568,2.934,569,6.152,570,3.496,571,3.47,572,3.47,573,3.47,574,3.47,575,3.47,576,3.47,577,3.47]],["title/modules/SignHistoryModule.html",[33,0.761,50,1.887]],["body/modules/SignHistoryModule.html",[2,1.939,3,0.271,4,0.236,5,0.236,8,0.025,21,0.419,22,0.51,25,0.271,26,0.041,31,0.019,32,0.019,33,1.263,35,1.387,36,1.387,37,1.591,38,1.591,39,1.387,40,2.315,41,2.315,47,3.017,50,3.69,52,2.078,53,1.591,54,1.591,56,2.592,63,3.065,64,1.984,141,2.874,144,2.346,158,3.481,182,2.874,567,3.755,578,3.266,579,3.266,580,3.266,581,3.863,582,3.863,583,3.863]],["title/injectables/SignHistoryService.html",[147,0.661,158,1.741]],["body/injectables/SignHistoryService.html",[3,0.208,4,0.181,5,0.181,8,0.026,9,0.425,10,1.239,13,1.022,15,1.569,21,0.344,22,0.391,25,0.208,26,0.031,27,1.569,31,0.016,32,0.016,64,3.008,77,2.345,79,2.205,91,1.792,92,1.118,93,0.898,94,1.569,119,1.522,144,3.557,147,0.822,148,1.139,151,2.673,155,1.522,158,2.163,175,2.538,178,2.018,179,0.931,193,2.506,209,2.197,211,2.74,239,2.166,267,1.65,429,2.103,453,2.74,570,3.969,584,2.506,585,4.212,586,3.562,587,4.212,588,2.506,589,2.964,590,4.212,591,2.964,592,3.562,593,4.9,594,2.964,595,2.964,596,4.212,597,2.964,598,2.506,599,4.212,600,2.506,601,2.558,602,2.964,603,2.964,604,2.964,605,2.964]],["title/classes/SignIn.html",[26,0.036,74,1.612]],["body/classes/SignIn.html",[3,0.213,4,0.185,5,0.185,8,0.026,9,0.436,12,1.763,13,0.777,17,1.968,18,1.694,21,0.349,24,1.019,25,0.379,26,0.06,31,0.016,32,0.016,74,2.361,75,1.443,83,1.854,88,2.342,92,0.897,93,1.042,178,1.249,179,0.953,186,1.443,187,1.558,211,1.558,215,1.842,217,1.689,219,2.43,221,1.249,227,1.842,239,2.609,256,1.341,258,2.044,260,1.538,297,1.443,316,2.807,403,1.558,429,1.782,558,1.842,606,1.842,607,2.565,608,3.942,609,3.601,610,3.034,611,2.565,612,3.601,613,3.315,614,3.034,615,2.92,616,2.86,617,3.315,618,1.842,619,1.558,620,2.86,621,2.86,622,1.558,623,2.026,624,2.026,625,2.026]],["title/classes/SignUp.html",[26,0.036,75,1.612]],["body/classes/SignUp.html",[3,0.199,4,0.173,5,0.173,8,0.025,9,0.408,12,1.971,13,0.868,17,1.969,18,1.644,21,0.336,24,0.954,25,0.368,26,0.058,31,0.015,32,0.015,74,2.638,75,1.944,83,1.87,88,2.283,92,1.162,93,1.059,178,1.17,179,0.892,186,1.351,187,1.459,211,1.459,215,1.725,217,1.581,219,2.378,221,1.17,227,1.725,239,2.63,256,1.256,258,1.971,260,1.467,297,1.351,316,2.83,403,2.098,429,1.718,558,2.481,606,1.725,607,2.402,608,3.974,609,3.496,611,2.402,612,3.704,613,3.496,615,2.847,616,2.729,617,3.196,618,1.725,619,1.459,620,2.729,621,2.729,622,1.459,623,1.897,624,1.897,625,1.897,626,2.841,627,2.841,628,4.086,629,2.841,630,2.841]],["title/classes/TokenPayload.html",[26,0.036,186,1.612]],["body/classes/TokenPayload.html",[3,0.211,4,0.184,5,0.184,8,0.026,9,0.432,13,1.068,17,1.955,18,1.688,21,0.347,24,1.011,25,0.377,26,0.059,31,0.016,32,0.016,74,2.026,75,1.432,83,1.688,88,1.754,92,0.892,93,1.072,178,1.24,179,0.946,186,2.026,187,1.546,211,2.538,215,1.828,217,2.752,219,2.335,221,2.035,227,1.828,239,2.375,256,1.331,258,1.754,260,1.529,297,1.432,316,2.556,403,1.546,429,2.114,558,1.828,606,1.828,608,3.589,609,2.845,612,3.301,613,2.845,615,2.912,616,2.845,617,3.301,618,1.828,619,1.546,620,2.845,621,2.845,622,1.546,623,2.011,624,3.301,625,3.301,631,3.01,632,3.01,633,3.01,634,3.01,635,3.01,636,3.01]],["title/classes/TokenResponse.html",[26,0.036,187,1.741]],["body/classes/TokenResponse.html",[3,0.222,4,0.193,5,0.193,8,0.026,9,0.455,12,1.304,13,0.8,17,1.97,18,1.726,21,0.357,24,1.063,25,0.386,26,0.061,31,0.016,32,0.016,74,2.099,75,1.506,83,1.815,88,1.817,92,0.925,93,1.033,178,1.304,179,0.995,186,1.506,187,2.266,211,1.626,215,3.084,217,1.763,219,2.092,221,1.304,227,3.084,239,2.554,256,1.4,258,1.817,260,1.585,297,2.099,316,2.748,403,1.626,429,1.824,558,1.923,606,1.923,608,3.67,609,2.947,612,3.393,613,2.947,615,2.967,616,2.947,617,3.393,618,1.923,619,1.626,620,2.947,621,2.947,622,1.626,623,2.115,624,2.115,625,2.115,637,2.677,638,3.166,639,3.166]],["title/classes/UserRequest.html",[26,0.036,640,1.887]],["body/classes/UserRequest.html",[3,0.254,4,0.221,5,0.221,8,0.026,9,0.52,13,0.988,17,1.996,18,1.52,21,0.34,24,1.216,25,0.382,26,0.057,31,0.018,32,0.018,83,1.52,88,2.493,92,1.305,93,0.916,178,1.491,179,1.138,219,2.393,221,2.242,256,1.601,258,2.393,260,1.737,316,2.3,429,1.3,448,2.937,471,1.723,601,2.199,615,2.796,619,2.483,622,1.86,640,2.693,641,2.419,642,3.622,643,3.622,644,3.622,645,3.23,646,2.694,647,2.694,648,2.694,649,2.016,650,2.419,651,2.694]],["title/classes/UserResponse.html",[26,0.036,649,1.887]],["body/classes/UserResponse.html",[3,0.233,4,0.203,5,0.203,8,0.026,9,0.477,13,1.101,17,1.992,18,1.433,21,0.32,24,1.115,25,0.366,26,0.055,31,0.017,32,0.017,83,1.433,88,2.42,92,1.272,93,1.022,94,1.785,178,1.367,179,1.043,219,2.309,221,2.42,256,1.468,258,2.309,260,1.638,316,2.169,429,1.638,448,2.769,471,1.579,601,3.163,615,2.675,619,2.342,622,1.705,640,1.849,641,2.218,645,3.046,646,2.47,647,2.47,648,2.47,649,2.539,650,3.479,651,3.392,652,3.321,653,3.321,654,3.321,655,3.321,656,3.321,657,3.321]],["title/classes/UserUpdate.html",[26,0.036,471,1.612]],["body/classes/UserUpdate.html",[3,0.236,4,0.205,5,0.205,8,0.026,9,0.482,12,1.893,13,0.951,17,1.975,18,1.444,21,0.323,24,1.128,25,0.368,26,0.055,31,0.017,32,0.017,83,1.77,88,2.43,92,1.307,93,0.882,94,1.792,178,1.383,179,1.055,219,1.893,221,2.509,256,1.485,258,2.32,260,1.651,316,2.68,429,1.206,448,3.422,471,2.186,601,2.04,615,2.691,619,2.36,622,1.725,637,3.887,640,1.87,641,2.244,645,3.763,646,3.419,647,3.419,648,3.419,649,1.87,650,2.244,651,2.499,658,3.359,659,3.359,660,3.359]],["title/modules/UsersModule.html",[33,0.761,51,1.741]],["body/modules/UsersModule.html",[3,0.284,4,0.247,5,0.247,8,0.025,21,0.403,22,0.533,25,0.284,26,0.042,31,0.019,32,0.019,33,1.29,35,1.45,36,1.45,37,1.663,38,1.663,39,1.45,40,2.364,41,2.364,47,3.053,51,3.431,52,2.139,53,1.663,54,1.663,56,2.667,141,3.004,157,3.245,661,3.414,662,3.414,663,3.414,664,4.038,665,4.038,666,4.038]],["title/injectables/UsersService.html",[147,0.661,157,1.612]],["body/injectables/UsersService.html",[3,0.141,4,0.122,5,0.122,8,0.026,9,0.288,10,0.924,13,0.96,15,1.488,17,1.14,21,0.308,22,0.265,25,0.221,26,0.021,27,1.488,31,0.012,32,0.012,77,2.945,88,1.808,91,1.699,92,1.231,93,0.851,94,1.488,119,1.03,147,0.613,148,0.771,151,2.615,155,1.03,157,1.495,168,4.441,178,1.295,180,2.339,188,1.03,189,2.59,190,1.218,209,2.255,219,2.255,221,1.964,239,2.911,267,1.75,429,2.022,448,3.326,453,2.255,463,2.885,471,2.089,534,3.266,538,3.266,570,3.266,586,3.279,588,1.695,592,1.695,598,1.695,600,4.033,601,2.896,640,2.445,649,1.116,650,4.136,667,1.492,668,3.144,669,3.878,670,3.144,671,2.005,672,6.251,673,2.005,674,3.144,675,2.005,676,2.005,677,2.005,678,2.005,679,3.144,680,2.005,681,2.005,682,2.005,683,2.005,684,2.005,685,3.144,686,3.878,687,3.144,688,2.005,689,2.005,690,2.005]],["title/coverage.html",[691,3.441]],["body/coverage.html",[0,2.17,1,1.99,5,0.182,6,2.519,8,0.026,26,0.065,31,0.016,32,0.016,39,1.07,64,2.171,71,1.99,72,2.519,74,1.417,75,1.417,93,0.501,105,1.659,134,1.53,144,2.567,147,1.241,149,3.145,157,1.417,158,1.53,162,1.53,186,1.417,187,1.53,189,2.824,241,1.99,255,1.659,257,2.519,277,1.53,278,1.659,291,1.99,292,2.519,327,1.659,329,1.99,371,2.519,386,2.519,402,2.519,406,2.519,453,1.53,456,2.519,460,1.99,461,2.519,469,1.809,471,1.417,476,1.659,492,2.519,520,2.519,549,2.519,567,1.99,568,2.519,584,2.519,606,3.248,640,1.659,641,3.282,649,1.659,667,3.145,691,2.216,692,2.979,693,2.979,694,2.979,695,6.909,696,5.349,697,5.648,698,2.519,699,4.914,700,5.648,701,5.867,702,5.349,703,2.979,704,2.519,705,2.979,706,2.979,707,2.979,708,2.979]],["title/dependencies.html",[36,1.464,709,2.394]],["body/dependencies.html",[8,0.026,22,0.51,24,1.297,26,0.053,31,0.019,32,0.019,36,1.387,58,3.266,138,2.58,140,2.58,159,2.58,161,3.755,179,1.214,180,2.874,275,3.266,276,3.266,325,3.754,326,2.58,424,4.268,509,3.266,510,4.434,513,4.182,516,3.266,555,3.266,618,2.346,710,3.863,711,5.961,712,3.863,713,3.863,714,3.863,715,3.863,716,3.863,717,5.047,718,3.863,719,3.863,720,3.863,721,3.863,722,3.863,723,3.863,724,3.863,725,3.863,726,3.863,727,3.863,728,3.863,729,3.863,730,3.863,731,3.863,732,3.863,733,3.863,734,3.863,735,3.863]],["title/miscellaneous/functions.html",[736,1.891,737,3.447]],["body/miscellaneous/functions.html",[8,0.023,9,0.753,31,0.023,32,0.023,39,2.314,704,4.434,736,3.502,737,4.434,738,5.244]],["title/index.html",[9,0.406,739,2.831,740,2.831]],["body/index.html",[4,0.23,8,0.025,18,1.182,31,0.018,32,0.018,117,2.095,380,3.182,645,3.707,691,2.799,741,3.763,742,3.763,743,4.961,744,3.763,745,3.763,746,3.763,747,3.763,748,3.763,749,5.55,750,3.763,751,3.763,752,3.763,753,3.763,754,6.421,755,3.763,756,3.763,757,3.763,758,6.297,759,3.763,760,3.763,761,4.961,762,3.763,763,3.763,764,3.763,765,3.763,766,4.961,767,4.961,768,3.763,769,3.763,770,3.763,771,4.961,772,4.961,773,3.763,774,3.763,775,3.763,776,3.763,777,3.763,778,3.182,779,3.763,780,3.763,781,3.763,782,3.763,783,3.763,784,3.763,785,3.763,786,3.763,787,3.763,788,3.182,789,3.763,790,3.763,791,3.763,792,3.763,793,3.763,794,3.763,795,3.182]],["title/modules.html",[35,1.661]],["body/modules.html",[8,0.021,31,0.021,32,0.021,34,2.989,35,1.607,44,2.491,45,2.717,46,2.491,47,2.128,48,2.717,49,2.491,50,2.491,51,2.298,778,5.753,796,6.804,797,6.804,798,6.804]],["title/overview.html",[799,3.911]],["body/overview.html",[2,1.031,8,0.026,31,0.015,32,0.015,33,0.603,34,4.439,35,0.963,36,0.963,37,1.105,38,1.105,39,0.963,40,1.105,41,1.105,42,2.268,43,2.268,44,3.7,45,3.551,46,3.018,47,2.908,48,3.713,49,3.255,50,3.404,51,3.191,52,1.614,53,1.105,54,1.105,105,3.255,130,2.268,131,2.268,133,2.268,134,3.002,148,1.031,157,2.781,158,3.002,162,3.002,190,1.629,255,2.837,256,1.186,327,2.579,360,2.268,362,2.268,398,2.268,399,2.268,450,2.268,451,2.268,452,2.268,453,3.002,476,2.579,486,2.268,487,2.268,503,2.268,504,2.268,505,2.268,578,2.268,579,2.268,580,2.268,661,2.268,662,2.268,663,2.268,799,2.268,800,2.683,801,2.683,802,2.683]],["title/properties.html",[260,1.464,709,2.394]],["body/properties.html",[8,0.025,18,1.626,19,4.375,31,0.022,32,0.022,260,1.858,788,4.375,795,4.375,803,5.174,804,5.174]],["title/miscellaneous/variables.html",[736,1.891,805,3.447]],["body/miscellaneous/variables.html",[8,0.026,9,0.637,27,1.306,31,0.02,32,0.02,78,2.696,83,1.395,93,0.928,149,3.303,175,2.112,188,2.28,189,4.191,190,3.349,267,2.472,429,1.98,469,3.349,534,4.463,538,4.463,667,3.303,698,3.755,736,2.966,805,3.755,806,4.44,807,4.44,808,4.44,809,4.44,810,4.44,811,4.44,812,4.44,813,4.44]]],"invertedIndex":[["",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/EventGateway.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"modules/GatewayModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"modules/RedisModule.html":{},"injectables/RedisService.html":{},"injectables/SharpPipe.html":{},"controllers/SignHistoryController.html":{},"modules/SignHistoryModule.html":{},"injectables/SignHistoryService.html":{},"classes/SignIn.html":{},"classes/SignUp.html":{},"classes/TokenPayload.html":{},"classes/TokenResponse.html":{},"classes/UserRequest.html":{},"classes/UserResponse.html":{},"classes/UserUpdate.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":695,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":803,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":732,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":726,"title":{},"body":{"dependencies.html":{}}}],["0.32.4",{"_index":735,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":725,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":727,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":700,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":696,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":697,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":701,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":703,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":705,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":702,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":706,"title":{},"body":{"coverage.html":{}}}],["1.0.0",{"_index":30,"title":{},"body":{"controllers/AppController.html":{}}}],["10",{"_index":190,"title":{},"body":{"injectables/AuthService.html":{},"controllers/FilesController.html":{},"injectables/UsersService.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["10.0.0",{"_index":711,"title":{},"body":{"dependencies.html":{}}}],["10.1.0",{"_index":714,"title":{},"body":{"dependencies.html":{}}}],["10.1.3",{"_index":717,"title":{},"body":{"dependencies.html":{}}}],["1000",{"_index":236,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["101",{"_index":29,"title":{},"body":{"controllers/AppController.html":{}}}],["1024",{"_index":355,"title":{},"body":{"controllers/FilesController.html":{}}}],["10mb",{"_index":345,"title":{},"body":{"controllers/FilesController.html":{}}}],["10mb)'})@apiconsumes('multipart/form",{"_index":313,"title":{},"body":{"controllers/FilesController.html":{}}}],["15",{"_index":558,"title":{},"body":{"injectables/SharpPipe.html":{},"classes/SignIn.html":{},"classes/SignUp.html":{},"classes/TokenPayload.html":{},"classes/TokenResponse.html":{}}}],["2.1.0",{"_index":710,"title":{},"body":{"dependencies.html":{}}}],["3",{"_index":565,"title":{},"body":{"injectables/SharpPipe.html":{}}}],["3.0.1",{"_index":722,"title":{},"body":{"dependencies.html":{}}}],["3.2.2",{"_index":712,"title":{},"body":{"dependencies.html":{}}}],["4",{"_index":613,"title":{},"body":{"classes/SignIn.html":{},"classes/SignUp.html":{},"classes/TokenPayload.html":{},"classes/TokenResponse.html":{}}}],["4.0.1",{"_index":728,"title":{},"body":{"dependencies.html":{}}}],["4.1.2",{"_index":723,"title":{},"body":{"dependencies.html":{}}}],["4.6.7",{"_index":729,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":801,"title":{},"body":{"overview.html":{}}}],["5.1.0",{"_index":720,"title":{},"body":{"dependencies.html":{}}}],["5.1.1",{"_index":719,"title":{},"body":{"dependencies.html":{}}}],["5.2.3",{"_index":721,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":609,"title":{},"body":{"classes/SignIn.html":{},"classes/SignUp.html":{},"classes/TokenPayload.html":{},"classes/TokenResponse.html":{}}}],["7.1.6",{"_index":718,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":734,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":802,"title":{},"body":{"overview.html":{}}}],["9",{"_index":800,"title":{},"body":{"overview.html":{}}}],["_",{"_index":560,"title":{},"body":{"injectables/SharpPipe.html":{}}}],["accesstoken",{"_index":215,"title":{},"body":{"injectables/AuthService.html":{},"classes/SignIn.html":{},"classes/SignUp.html":{},"classes/TokenPayload.html":{},"classes/TokenResponse.html":{}}}],["addfiletypevalidator",{"_index":351,"title":{},"body":{"controllers/FilesController.html":{}}}],["addmaxsizevalidator",{"_index":353,"title":{},"body":{"controllers/FilesController.html":{}}}],["agent",{"_index":192,"title":{},"body":{"injectables/AuthService.html":{}}}],["algorithm",{"_index":439,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["already",{"_index":101,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["amazing",{"_index":779,"title":{},"body":{"index.html":{}}}],["android",{"_index":195,"title":{},"body":{"injectables/AuthService.html":{}}}],["apibadrequestresponse",{"_index":108,"title":{},"body":{"controllers/AuthController.html":{},"controllers/FilesController.html":{}}}],["apibearerauth",{"_index":331,"title":{},"body":{"controllers/FilesController.html":{},"controllers/ProfileController.html":{},"controllers/SignHistoryController.html":{}}}],["apibody",{"_index":109,"title":{},"body":{"controllers/AuthController.html":{},"controllers/FilesController.html":{}}}],["apiconsumes",{"_index":332,"title":{},"body":{"controllers/FilesController.html":{}}}],["apiconsumes('multipart/form",{"_index":346,"title":{},"body":{"controllers/FilesController.html":{}}}],["apicreatedresponse",{"_index":110,"title":{},"body":{"controllers/AuthController.html":{},"controllers/FilesController.html":{},"controllers/ProfileController.html":{}}}],["apiexcludecontroller",{"_index":23,"title":{},"body":{"controllers/AppController.html":{}}}],["apiinternalservererrorresponse",{"_index":111,"title":{},"body":{"controllers/AuthController.html":{},"controllers/FilesController.html":{},"controllers/ProfileController.html":{},"controllers/SignHistoryController.html":{}}}],["apiokresponse",{"_index":333,"title":{},"body":{"controllers/FilesController.html":{},"controllers/ProfileController.html":{},"controllers/SignHistoryController.html":{}}}],["apioperation",{"_index":112,"title":{},"body":{"controllers/AuthController.html":{},"controllers/FilesController.html":{},"controllers/ProfileController.html":{},"controllers/SignHistoryController.html":{}}}],["apiproperty",{"_index":615,"title":{},"body":{"classes/SignIn.html":{},"classes/SignUp.html":{},"classes/TokenPayload.html":{},"classes/TokenResponse.html":{},"classes/UserRequest.html":{},"classes/UserResponse.html":{},"classes/UserUpdate.html":{}}}],["apiproperty({description",{"_index":637,"title":{},"body":{"classes/TokenResponse.html":{},"classes/UserUpdate.html":{}}}],["apiresponse",{"_index":334,"title":{},"body":{"controllers/FilesController.html":{}}}],["apitags",{"_index":113,"title":{},"body":{"controllers/AuthController.html":{},"controllers/FilesController.html":{},"controllers/ProfileController.html":{},"controllers/SignHistoryController.html":{}}}],["apitags('authentication",{"_index":115,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('files",{"_index":337,"title":{},"body":{"controllers/FilesController.html":{}}}],["apitags('profile",{"_index":481,"title":{},"body":{"controllers/ProfileController.html":{}}}],["apitags('sign",{"_index":575,"title":{},"body":{"controllers/SignHistoryController.html":{}}}],["apiunauthorizedresponse",{"_index":335,"title":{},"body":{"controllers/FilesController.html":{},"controllers/ProfileController.html":{},"controllers/SignHistoryController.html":{}}}],["app",{"_index":756,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":748,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":34,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["async",{"_index":151,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FilesService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"injectables/ProfileService.html":{},"modules/RedisModule.html":{},"injectables/RedisService.html":{},"injectables/SharpPipe.html":{},"injectables/SignHistoryService.html":{},"injectables/UsersService.html":{}}}],["auth",{"_index":469,"title":{},"body":{"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"controllers/SignHistoryController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["auth.controller",{"_index":136,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.guard",{"_index":279,"title":{},"body":{"classes/EventGateway.html":{},"controllers/FilesController.html":{},"controllers/ProfileController.html":{},"controllers/SignHistoryController.html":{}}}],["auth.guard.ts",{"_index":402,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["auth.id",{"_index":501,"title":{},"body":{"injectables/ProfileService.html":{}}}],["auth.model",{"_index":107,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["auth.service",{"_index":106,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":59,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":71,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":405,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard('jwt",{"_index":404,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authmodule",{"_index":44,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FilesModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":788,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authservice",{"_index":105,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["avatar",{"_index":221,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"classes/SignIn.html":{},"classes/SignUp.html":{},"classes/TokenPayload.html":{},"classes/TokenResponse.html":{},"classes/UserRequest.html":{},"classes/UserResponse.html":{},"classes/UserUpdate.html":{},"injectables/UsersService.html":{}}}],["await",{"_index":209,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FilesService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"injectables/ProfileService.html":{},"modules/RedisModule.html":{},"injectables/RedisService.html":{},"injectables/SharpPipe.html":{},"injectables/SignHistoryService.html":{},"injectables/UsersService.html":{}}}],["backers",{"_index":780,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":177,"title":{},"body":{"injectables/AuthService.html":{}}}],["badrequestexception('email",{"_index":242,"title":{},"body":{"injectables/AuthService.html":{}}}],["badrequestexception('user",{"_index":248,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt",{"_index":180,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["bcrypt.compare(body.password",{"_index":244,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.hash(req.password",{"_index":687,"title":{},"body":{"injectables/UsersService.html":{}}}],["binary",{"_index":350,"title":{},"body":{"controllers/FilesController.html":{}}}],["blackberry",{"_index":197,"title":{},"body":{"injectables/AuthService.html":{}}}],["body",{"_index":95,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/ProfileController.html":{}}}],["body.email",{"_index":253,"title":{},"body":{"injectables/AuthService.html":{}}}],["body.name",{"_index":252,"title":{},"body":{"injectables/AuthService.html":{}}}],["body.password",{"_index":254,"title":{},"body":{"injectables/AuthService.html":{}}}],["bootstrap",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FilesModule.html":{},"modules/GatewayModule.html":{},"modules/PrismaModule.html":{},"modules/ProfileModule.html":{},"modules/RedisModule.html":{},"modules/SignHistoryModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":798,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":796,"title":{},"body":{"modules.html":{}}}],["build",{"_index":356,"title":{},"body":{"controllers/FilesController.html":{}}}],["building",{"_index":744,"title":{},"body":{"index.html":{}}}],["cache",{"_index":513,"title":{},"body":{"modules/RedisModule.html":{},"injectables/RedisService.html":{},"dependencies.html":{}}}],["cachemodule",{"_index":508,"title":{},"body":{"modules/RedisModule.html":{}}}],["cachemodule.registerasync",{"_index":514,"title":{},"body":{"modules/RedisModule.html":{}}}],["cdt",{"_index":601,"title":{},"body":{"injectables/SignHistoryService.html":{},"classes/UserRequest.html":{},"classes/UserResponse.html":{},"classes/UserUpdate.html":{},"injectables/UsersService.html":{}}}],["chunk",{"_index":392,"title":{},"body":{"injectables/FilesService.html":{}}}],["class",{"_index":26,"title":{"classes/EventGateway.html":{},"classes/SignIn.html":{},"classes/SignUp.html":{},"classes/TokenPayload.html":{},"classes/TokenResponse.html":{},"classes/UserRequest.html":{},"classes/UserResponse.html":{},"classes/UserUpdate.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/EventGateway.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"modules/GatewayModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"modules/RedisModule.html":{},"injectables/RedisService.html":{},"injectables/SharpPipe.html":{},"controllers/SignHistoryController.html":{},"modules/SignHistoryModule.html":{},"injectables/SignHistoryService.html":{},"classes/SignIn.html":{},"classes/SignUp.html":{},"classes/TokenPayload.html":{},"classes/TokenResponse.html":{},"classes/UserRequest.html":{},"classes/UserResponse.html":{},"classes/UserUpdate.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":256,"title":{},"body":{"classes/EventGateway.html":{},"classes/SignIn.html":{},"classes/SignUp.html":{},"classes/TokenPayload.html":{},"classes/TokenResponse.html":{},"classes/UserRequest.html":{},"classes/UserResponse.html":{},"classes/UserUpdate.html":{},"overview.html":{}}}],["clear",{"_index":522,"title":{},"body":{"injectables/RedisService.html":{}}}],["cluster_appmodule",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":130,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":133,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":132,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":131,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_filesmodule",{"_index":360,"title":{},"body":{"modules/FilesModule.html":{},"overview.html":{}}}],["cluster_filesmodule_imports",{"_index":361,"title":{},"body":{"modules/FilesModule.html":{}}}],["cluster_filesmodule_providers",{"_index":362,"title":{},"body":{"modules/FilesModule.html":{},"overview.html":{}}}],["cluster_gatewaymodule",{"_index":398,"title":{},"body":{"modules/GatewayModule.html":{},"overview.html":{}}}],["cluster_gatewaymodule_exports",{"_index":399,"title":{},"body":{"modules/GatewayModule.html":{},"overview.html":{}}}],["cluster_prismamodule",{"_index":450,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_exports",{"_index":452,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_providers",{"_index":451,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_profilemodule",{"_index":486,"title":{},"body":{"modules/ProfileModule.html":{},"overview.html":{}}}],["cluster_profilemodule_imports",{"_index":488,"title":{},"body":{"modules/ProfileModule.html":{}}}],["cluster_profilemodule_providers",{"_index":487,"title":{},"body":{"modules/ProfileModule.html":{},"overview.html":{}}}],["cluster_redismodule",{"_index":503,"title":{},"body":{"modules/RedisModule.html":{},"overview.html":{}}}],["cluster_redismodule_exports",{"_index":504,"title":{},"body":{"modules/RedisModule.html":{},"overview.html":{}}}],["cluster_redismodule_providers",{"_index":505,"title":{},"body":{"modules/RedisModule.html":{},"overview.html":{}}}],["cluster_signhistorymodule",{"_index":578,"title":{},"body":{"modules/SignHistoryModule.html":{},"overview.html":{}}}],["cluster_signhistorymodule_exports",{"_index":580,"title":{},"body":{"modules/SignHistoryModule.html":{},"overview.html":{}}}],["cluster_signhistorymodule_imports",{"_index":581,"title":{},"body":{"modules/SignHistoryModule.html":{}}}],["cluster_signhistorymodule_providers",{"_index":579,"title":{},"body":{"modules/SignHistoryModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":661,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":662,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_imports",{"_index":664,"title":{},"body":{"modules/UsersModule.html":{}}}],["cluster_usersmodule_providers",{"_index":663,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["configmodule",{"_index":57,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["connected",{"_index":283,"title":{},"body":{"classes/EventGateway.html":{}}}],["console.log(socket.id",{"_index":282,"title":{},"body":{"classes/EventGateway.html":{}}}],["const",{"_index":188,"title":{},"body":{"injectables/AuthService.html":{},"classes/EventGateway.html":{},"injectables/JwtStrategy.html":{},"injectables/RedisService.html":{},"injectables/SharpPipe.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":155,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FilesService.html":{},"injectables/JwtStrategy.html":{},"injectables/ProfileService.html":{},"injectables/RedisService.html":{},"injectables/SignHistoryService.html":{},"injectables/UsersService.html":{}}}],["constructor(@inject('cache_manager",{"_index":541,"title":{},"body":{"injectables/RedisService.html":{}}}],["constructor(cache",{"_index":525,"title":{},"body":{"injectables/RedisService.html":{}}}],["constructor(jwt",{"_index":372,"title":{},"body":{"injectables/FilesService.html":{}}}],["constructor(prisma",{"_index":588,"title":{},"body":{"injectables/SignHistoryService.html":{},"injectables/UsersService.html":{}}}],["constructor(private",{"_index":119,"title":{},"body":{"controllers/AuthController.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/ProfileController.html":{},"controllers/SignHistoryController.html":{},"injectables/SignHistoryService.html":{},"injectables/UsersService.html":{}}}],["constructor(usersservice",{"_index":156,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/ProfileService.html":{}}}],["content",{"_index":288,"title":{},"body":{"classes/EventGateway.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/FilesController.html":{},"controllers/ProfileController.html":{},"controllers/SignHistoryController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/FilesController.html":{},"controllers/ProfileController.html":{},"controllers/SignHistoryController.html":{},"coverage.html":{}}}],["controller('/v1/auth",{"_index":114,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('/v1/files",{"_index":336,"title":{},"body":{"controllers/FilesController.html":{}}}],["controller('/v1/profile",{"_index":480,"title":{},"body":{"controllers/ProfileController.html":{}}}],["controller('sign",{"_index":574,"title":{},"body":{"controllers/SignHistoryController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"controllers/SignHistoryController.html":{},"modules/SignHistoryModule.html":{},"overview.html":{}}}],["countbyuid",{"_index":585,"title":{},"body":{"injectables/SignHistoryService.html":{}}}],["countbyuid(uid",{"_index":590,"title":{},"body":{"injectables/SignHistoryService.html":{}}}],["coverage",{"_index":691,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":586,"title":{},"body":{"injectables/SignHistoryService.html":{},"injectables/UsersService.html":{}}}],["create(req",{"_index":592,"title":{},"body":{"injectables/SignHistoryService.html":{},"injectables/UsersService.html":{}}}],["createparamdecorator",{"_index":809,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createreadstream",{"_index":378,"title":{},"body":{"injectables/FilesService.html":{}}}],["createreadstream(join(process.env.upload_dir",{"_index":384,"title":{},"body":{"injectables/FilesService.html":{}}}],["createtoken",{"_index":152,"title":{},"body":{"injectables/AuthService.html":{}}}],["createtoken(user",{"_index":164,"title":{},"body":{"injectables/AuthService.html":{}}}],["crypto",{"_index":185,"title":{},"body":{"injectables/AuthService.html":{}}}],["ctx",{"_index":810,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":812,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data",{"_index":267,"title":{},"body":{"classes/EventGateway.html":{},"controllers/FilesController.html":{},"injectables/JwtStrategy.html":{},"injectables/SignHistoryService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["data')@apibody({schema",{"_index":314,"title":{},"body":{"controllers/FilesController.html":{}}}],["data.avatar",{"_index":435,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["data.email",{"_index":434,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["data.expiresin",{"_index":438,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["data.name",{"_index":433,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["data.refid",{"_index":436,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["data.secret",{"_index":437,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["data.sub",{"_index":431,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["data.uid",{"_index":432,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["date",{"_index":651,"title":{},"body":{"classes/UserRequest.html":{},"classes/UserResponse.html":{},"classes/UserUpdate.html":{}}}],["date.now",{"_index":559,"title":{},"body":{"injectables/SharpPipe.html":{}}}],["declarations",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FilesModule.html":{},"modules/GatewayModule.html":{},"modules/PrismaModule.html":{},"modules/ProfileModule.html":{},"modules/RedisModule.html":{},"modules/SignHistoryModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decoded",{"_index":444,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["decoded.exp",{"_index":449,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["decorators",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/EventGateway.html":{},"controllers/FilesController.html":{},"controllers/ProfileController.html":{},"controllers/SignHistoryController.html":{},"classes/SignIn.html":{},"classes/SignUp.html":{},"classes/TokenResponse.html":{},"classes/UserUpdate.html":{}}}],["default",{"_index":538,"title":{},"body":{"injectables/RedisService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":13,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/EventGateway.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"injectables/RedisService.html":{},"injectables/SharpPipe.html":{},"controllers/SignHistoryController.html":{},"injectables/SignHistoryService.html":{},"classes/SignIn.html":{},"classes/SignUp.html":{},"classes/TokenPayload.html":{},"classes/TokenResponse.html":{},"classes/UserRequest.html":{},"classes/UserResponse.html":{},"classes/UserUpdate.html":{},"injectables/UsersService.html":{}}}],["delete",{"_index":668,"title":{},"body":{"injectables/UsersService.html":{}}}],["delete(id",{"_index":674,"title":{},"body":{"injectables/UsersService.html":{}}}],["dependencies",{"_index":36,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FilesModule.html":{},"modules/GatewayModule.html":{},"modules/PrismaModule.html":{},"modules/ProfileModule.html":{},"modules/RedisModule.html":{},"modules/SignHistoryModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["desc",{"_index":603,"title":{},"body":{"injectables/SignHistoryService.html":{}}}],["description",{"_index":18,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/FilesController.html":{},"controllers/ProfileController.html":{},"controllers/SignHistoryController.html":{},"classes/SignIn.html":{},"classes/SignUp.html":{},"classes/TokenPayload.html":{},"classes/TokenResponse.html":{},"classes/UserRequest.html":{},"classes/UserResponse.html":{},"classes/UserUpdate.html":{},"index.html":{},"properties.html":{}}}],["development",{"_index":757,"title":{},"body":{"index.html":{}}}],["device",{"_index":193,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SignHistoryService.html":{}}}],["document",{"_index":20,"title":{},"body":{"controllers/AppController.html":{}}}],["documentation",{"_index":692,"title":{},"body":{"coverage.html":{}}}],["doe",{"_index":647,"title":{},"body":{"classes/UserRequest.html":{},"classes/UserResponse.html":{},"classes/UserUpdate.html":{}}}],["e2e",{"_index":768,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":745,"title":{},"body":{"index.html":{}}}],["effort",{"_index":564,"title":{},"body":{"injectables/SharpPipe.html":{}}}],["email",{"_index":219,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"classes/SignIn.html":{},"classes/SignUp.html":{},"classes/TokenPayload.html":{},"classes/TokenResponse.html":{},"classes/UserRequest.html":{},"classes/UserResponse.html":{},"classes/UserUpdate.html":{},"injectables/UsersService.html":{}}}],["error",{"_index":118,"title":{},"body":{"controllers/AuthController.html":{},"controllers/FilesController.html":{},"controllers/ProfileController.html":{},"controllers/SignHistoryController.html":{}}}],["errorhttpstatuscode",{"_index":357,"title":{},"body":{"controllers/FilesController.html":{}}}],["event",{"_index":289,"title":{},"body":{"classes/EventGateway.html":{}}}],["eventgateway",{"_index":255,"title":{"classes/EventGateway.html":{}},"body":{"classes/EventGateway.html":{},"modules/GatewayModule.html":{},"injectables/ProfileService.html":{},"coverage.html":{},"overview.html":{}}}],["events",{"_index":290,"title":{},"body":{"classes/EventGateway.html":{},"injectables/ProfileService.html":{}}}],["events.gateway",{"_index":401,"title":{},"body":{"modules/GatewayModule.html":{}}}],["example",{"_index":645,"title":{},"body":{"classes/UserRequest.html":{},"classes/UserResponse.html":{},"classes/UserUpdate.html":{},"index.html":{}}}],["executioncontext",{"_index":811,"title":{},"body":{"miscellaneous/variables.html":{}}}],["exist",{"_index":87,"title":{},"body":{"controllers/AuthController.html":{}}}],["exists",{"_index":102,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["exp",{"_index":625,"title":{},"body":{"classes/SignIn.html":{},"classes/SignUp.html":{},"classes/TokenPayload.html":{},"classes/TokenResponse.html":{}}}],["expiresin",{"_index":225,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["export",{"_index":25,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/EventGateway.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"modules/GatewayModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"modules/RedisModule.html":{},"injectables/RedisService.html":{},"injectables/SharpPipe.html":{},"controllers/SignHistoryController.html":{},"modules/SignHistoryModule.html":{},"injectables/SignHistoryService.html":{},"classes/SignIn.html":{},"classes/SignUp.html":{},"classes/TokenPayload.html":{},"classes/TokenResponse.html":{},"classes/UserRequest.html":{},"classes/UserResponse.html":{},"classes/UserUpdate.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FilesModule.html":{},"modules/GatewayModule.html":{},"modules/PrismaModule.html":{},"modules/ProfileModule.html":{},"modules/RedisModule.html":{},"modules/SignHistoryModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["express",{"_index":326,"title":{},"body":{"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"dependencies.html":{}}}],["express.multer.file",{"_index":552,"title":{},"body":{"injectables/SharpPipe.html":{}}}],["extends",{"_index":403,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"classes/SignIn.html":{},"classes/SignUp.html":{},"classes/TokenPayload.html":{},"classes/TokenResponse.html":{}}}],["extractjwt",{"_index":422,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":427,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["false",{"_index":448,"title":{},"body":{"injectables/JwtStrategy.html":{},"classes/UserRequest.html":{},"classes/UserResponse.html":{},"classes/UserUpdate.html":{},"injectables/UsersService.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/EventGateway.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"modules/GatewayModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"modules/RedisModule.html":{},"injectables/RedisService.html":{},"injectables/SharpPipe.html":{},"controllers/SignHistoryController.html":{},"modules/SignHistoryModule.html":{},"injectables/SignHistoryService.html":{},"classes/SignIn.html":{},"classes/SignUp.html":{},"classes/TokenPayload.html":{},"classes/TokenResponse.html":{},"classes/UserRequest.html":{},"classes/UserResponse.html":{},"classes/UserUpdate.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["file'})@useinterceptors(undefined)@useguards(jwtauthguard)@apibearerauth()@apicreatedresponse({description",{"_index":307,"title":{},"body":{"controllers/FilesController.html":{}}}],["fileinterceptor",{"_index":324,"title":{},"body":{"controllers/FilesController.html":{}}}],["filename",{"_index":303,"title":{},"body":{"controllers/FilesController.html":{},"injectables/SharpPipe.html":{}}}],["files.controller",{"_index":364,"title":{},"body":{"modules/FilesModule.html":{}}}],["files.service",{"_index":328,"title":{},"body":{"controllers/FilesController.html":{},"modules/FilesModule.html":{}}}],["files/files.module",{"_index":66,"title":{},"body":{"modules/AppModule.html":{}}}],["filescontroller",{"_index":291,"title":{"controllers/FilesController.html":{}},"body":{"controllers/FilesController.html":{},"modules/FilesModule.html":{},"coverage.html":{}}}],["filesmodule",{"_index":45,"title":{"modules/FilesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/FilesModule.html":{},"modules.html":{},"overview.html":{}}}],["filesservice",{"_index":327,"title":{"injectables/FilesService.html":{}},"body":{"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"coverage.html":{},"overview.html":{}}}],["filetype",{"_index":352,"title":{},"body":{"controllers/FilesController.html":{}}}],["findall",{"_index":570,"title":{},"body":{"controllers/SignHistoryController.html":{},"injectables/SignHistoryService.html":{},"injectables/UsersService.html":{}}}],["findall(@auth",{"_index":576,"title":{},"body":{"controllers/SignHistoryController.html":{}}}],["findall(auth",{"_index":571,"title":{},"body":{"controllers/SignHistoryController.html":{}}}],["findbyemail",{"_index":669,"title":{},"body":{"injectables/UsersService.html":{}}}],["findbyemail(email",{"_index":677,"title":{},"body":{"injectables/UsersService.html":{}}}],["findbyid",{"_index":670,"title":{},"body":{"injectables/UsersService.html":{}}}],["findbyid(id",{"_index":679,"title":{},"body":{"injectables/UsersService.html":{}}}],["findbyname",{"_index":294,"title":{},"body":{"controllers/FilesController.html":{},"injectables/FilesService.html":{}}}],["findbyname(filename",{"_index":296,"title":{},"body":{"controllers/FilesController.html":{}}}],["findbyname(name",{"_index":374,"title":{},"body":{"injectables/FilesService.html":{}}}],["findbyuid",{"_index":587,"title":{},"body":{"injectables/SignHistoryService.html":{}}}],["findbyuid(uid",{"_index":596,"title":{},"body":{"injectables/SignHistoryService.html":{}}}],["format",{"_index":349,"title":{},"body":{"controllers/FilesController.html":{}}}],["framework",{"_index":743,"title":{},"body":{"index.html":{}}}],["fs",{"_index":379,"title":{},"body":{"injectables/FilesService.html":{}}}],["function",{"_index":386,"title":{},"body":{"injectables/FilesService.html":{},"coverage.html":{}}}],["functions",{"_index":737,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gateway/gateway.module",{"_index":68,"title":{},"body":{"modules/AppModule.html":{}}}],["gatewaymodule",{"_index":46,"title":{"modules/GatewayModule.html":{}},"body":{"modules/AppModule.html":{},"modules/GatewayModule.html":{},"modules/ProfileModule.html":{},"modules.html":{},"overview.html":{}}}],["generatetoken",{"_index":408,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["generatetoken(data",{"_index":412,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["get(':filename",{"_index":339,"title":{},"body":{"controllers/FilesController.html":{}}}],["get(':filename')@apioperation({summary",{"_index":300,"title":{},"body":{"controllers/FilesController.html":{}}}],["get()@apioperation({summary",{"_index":465,"title":{},"body":{"controllers/ProfileController.html":{},"controllers/SignHistoryController.html":{}}}],["get(@auth",{"_index":482,"title":{},"body":{"controllers/ProfileController.html":{}}}],["get(auth",{"_index":464,"title":{},"body":{"controllers/ProfileController.html":{}}}],["get(key",{"_index":528,"title":{},"body":{"injectables/RedisService.html":{}}}],["getdevice",{"_index":153,"title":{},"body":{"injectables/AuthService.html":{}}}],["getdevice(useragent",{"_index":169,"title":{},"body":{"injectables/AuthService.html":{}}}],["getting",{"_index":739,"title":{"index.html":{}},"body":{}}],["getuseragent",{"_index":154,"title":{},"body":{"injectables/AuthService.html":{}}}],["getuseragent(http",{"_index":172,"title":{},"body":{"injectables/AuthService.html":{}}}],["grow",{"_index":775,"title":{},"body":{"index.html":{}}}],["handleevent",{"_index":261,"title":{},"body":{"classes/EventGateway.html":{}}}],["handleevent(@messagebody",{"_index":285,"title":{},"body":{"classes/EventGateway.html":{}}}],["handleevent(data",{"_index":264,"title":{},"body":{"classes/EventGateway.html":{}}}],["hasemail",{"_index":250,"title":{},"body":{"injectables/AuthService.html":{}}}],["here",{"_index":785,"title":{},"body":{"index.html":{}}}],["history",{"_index":569,"title":{},"body":{"controllers/SignHistoryController.html":{}}}],["history'})@apiokresponse({description",{"_index":572,"title":{},"body":{"controllers/SignHistoryController.html":{}}}],["history.controller",{"_index":583,"title":{},"body":{"modules/SignHistoryModule.html":{}}}],["history.controller.ts",{"_index":568,"title":{},"body":{"controllers/SignHistoryController.html":{},"coverage.html":{}}}],["history.controller.ts:33",{"_index":573,"title":{},"body":{"controllers/SignHistoryController.html":{}}}],["history.module",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["history.module.ts",{"_index":582,"title":{},"body":{"modules/SignHistoryModule.html":{}}}],["history.service",{"_index":182,"title":{},"body":{"injectables/AuthService.html":{},"controllers/SignHistoryController.html":{},"modules/SignHistoryModule.html":{}}}],["history.service.ts",{"_index":584,"title":{},"body":{"injectables/SignHistoryService.html":{},"coverage.html":{}}}],["history.service.ts:13",{"_index":597,"title":{},"body":{"injectables/SignHistoryService.html":{}}}],["history.service.ts:29",{"_index":591,"title":{},"body":{"injectables/SignHistoryService.html":{}}}],["history.service.ts:37",{"_index":594,"title":{},"body":{"injectables/SignHistoryService.html":{}}}],["history.service.ts:6",{"_index":589,"title":{},"body":{"injectables/SignHistoryService.html":{}}}],["history.service.ts:9",{"_index":595,"title":{},"body":{"injectables/SignHistoryService.html":{}}}],["history/sign",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/SignHistoryController.html":{},"modules/SignHistoryModule.html":{},"injectables/SignHistoryService.html":{},"coverage.html":{}}}],["hs256",{"_index":440,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["http",{"_index":166,"title":{},"body":{"injectables/AuthService.html":{}}}],["http.headers['user",{"_index":191,"title":{},"body":{"injectables/AuthService.html":{}}}],["https://example.com/avatar.png",{"_index":648,"title":{},"body":{"classes/UserRequest.html":{},"classes/UserResponse.html":{},"classes/UserUpdate.html":{}}}],["https://nestjs.com",{"_index":792,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":318,"title":{},"body":{"controllers/FilesController.html":{},"injectables/FilesService.html":{}}}],["httpstatus.bad_request",{"_index":358,"title":{},"body":{"controllers/FilesController.html":{}}}],["iat",{"_index":624,"title":{},"body":{"classes/SignIn.html":{},"classes/SignUp.html":{},"classes/TokenPayload.html":{},"classes/TokenResponse.html":{}}}],["id",{"_index":650,"title":{},"body":{"classes/UserRequest.html":{},"classes/UserResponse.html":{},"classes/UserUpdate.html":{},"injectables/UsersService.html":{}}}],["identifier",{"_index":693,"title":{},"body":{"coverage.html":{}}}],["iemobile",{"_index":205,"title":{},"body":{"injectables/AuthService.html":{}}}],["image",{"_index":310,"title":{},"body":{"controllers/FilesController.html":{},"injectables/SharpPipe.html":{}}}],["image/jpeg",{"_index":390,"title":{},"body":{"injectables/FilesService.html":{}}}],["implements",{"_index":258,"title":{},"body":{"classes/EventGateway.html":{},"injectables/PrismaService.html":{},"injectables/SharpPipe.html":{},"classes/SignIn.html":{},"classes/SignUp.html":{},"classes/TokenPayload.html":{},"classes/TokenResponse.html":{},"classes/UserRequest.html":{},"classes/UserResponse.html":{},"classes/UserUpdate.html":{}}}],["import",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/EventGateway.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"modules/GatewayModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"modules/RedisModule.html":{},"injectables/RedisService.html":{},"injectables/SharpPipe.html":{},"controllers/SignHistoryController.html":{},"modules/SignHistoryModule.html":{},"injectables/SignHistoryService.html":{},"classes/SignIn.html":{},"classes/SignUp.html":{},"classes/TokenPayload.html":{},"classes/TokenResponse.html":{},"classes/UserRequest.html":{},"classes/UserResponse.html":{},"classes/UserUpdate.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["imports",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FilesModule.html":{},"modules/ProfileModule.html":{},"modules/RedisModule.html":{},"modules/SignHistoryModule.html":{},"modules/UsersModule.html":{}}}],["in'})@apibody({type",{"_index":81,"title":{},"body":{"controllers/AuthController.html":{}}}],["in.'})@apibadrequestresponse({description",{"_index":86,"title":{},"body":{"controllers/AuthController.html":{}}}],["incorrect",{"_index":89,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["index",{"_index":9,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/EventGateway.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"injectables/RedisService.html":{},"injectables/SharpPipe.html":{},"controllers/SignHistoryController.html":{},"injectables/SignHistoryService.html":{},"classes/SignIn.html":{},"classes/SignUp.html":{},"classes/TokenPayload.html":{},"classes/TokenResponse.html":{},"classes/UserRequest.html":{},"classes/UserResponse.html":{},"classes/UserUpdate.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/EventGateway.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"modules/GatewayModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"modules/RedisModule.html":{},"injectables/RedisService.html":{},"injectables/SharpPipe.html":{},"controllers/SignHistoryController.html":{},"modules/SignHistoryModule.html":{},"injectables/SignHistoryService.html":{},"classes/SignIn.html":{},"classes/SignUp.html":{},"classes/TokenPayload.html":{},"classes/TokenResponse.html":{},"classes/UserRequest.html":{},"classes/UserResponse.html":{},"classes/UserUpdate.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["inherited",{"_index":628,"title":{},"body":{"classes/SignUp.html":{}}}],["init",{"_index":11,"title":{},"body":{"controllers/AppController.html":{}}}],["inject",{"_index":540,"title":{},"body":{"injectables/RedisService.html":{}}}],["injectable",{"_index":147,"title":{"injectables/AuthService.html":{},"injectables/FilesService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"injectables/ProfileService.html":{},"injectables/RedisService.html":{},"injectables/SharpPipe.html":{},"injectables/SignHistoryService.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/FilesService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"injectables/ProfileService.html":{},"injectables/RedisService.html":{},"injectables/SharpPipe.html":{},"injectables/SignHistoryService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":148,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FilesService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"injectables/ProfileService.html":{},"injectables/RedisService.html":{},"injectables/SharpPipe.html":{},"injectables/SignHistoryService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["installation",{"_index":753,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":755,"title":{},"body":{"index.html":{}}}],["internal",{"_index":116,"title":{},"body":{"controllers/AuthController.html":{},"controllers/FilesController.html":{},"controllers/ProfileController.html":{},"controllers/SignHistoryController.html":{}}}],["invalid",{"_index":309,"title":{},"body":{"controllers/FilesController.html":{}}}],["ios",{"_index":199,"title":{},"body":{"injectables/AuthService.html":{}}}],["ip",{"_index":79,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/SignHistoryService.html":{}}}],["isemail",{"_index":616,"title":{},"body":{"classes/SignIn.html":{},"classes/SignUp.html":{},"classes/TokenPayload.html":{},"classes/TokenResponse.html":{}}}],["isemail()@maxlength(50)@apiproperty({description",{"_index":607,"title":{},"body":{"classes/SignIn.html":{},"classes/SignUp.html":{}}}],["isglobal",{"_index":519,"title":{},"body":{"modules/RedisModule.html":{}}}],["isnotempty",{"_index":617,"title":{},"body":{"classes/SignIn.html":{},"classes/SignUp.html":{},"classes/TokenPayload.html":{},"classes/TokenResponse.html":{}}}],["isnotempty()@minlength(4)@maxlength(15)@apiproperty({description",{"_index":626,"title":{},"body":{"classes/SignUp.html":{}}}],["isnotempty()@minlength(4)@maxlength(50)@apiproperty({description",{"_index":611,"title":{},"body":{"classes/SignIn.html":{},"classes/SignUp.html":{}}}],["ispasswordvalid",{"_index":243,"title":{},"body":{"injectables/AuthService.html":{}}}],["issuer",{"_index":441,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["john",{"_index":646,"title":{},"body":{"classes/UserRequest.html":{},"classes/UserResponse.html":{},"classes/UserUpdate.html":{}}}],["join",{"_index":380,"title":{},"body":{"injectables/FilesService.html":{},"index.html":{}}}],["jwt",{"_index":159,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FilesService.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwt.strategy",{"_index":142,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["jwtauthguard",{"_index":277,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"classes/EventGateway.html":{},"controllers/FilesController.html":{},"injectables/JwtAuthGuard.html":{},"controllers/ProfileController.html":{},"controllers/SignHistoryController.html":{},"coverage.html":{}}}],["jwtfromrequest",{"_index":426,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":139,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":146,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":160,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["jwtstrategy",{"_index":134,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/FilesService.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kamil",{"_index":789,"title":{},"body":{"index.html":{}}}],["key",{"_index":530,"title":{},"body":{"injectables/RedisService.html":{}}}],["legend",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FilesModule.html":{},"modules/GatewayModule.html":{},"modules/PrismaModule.html":{},"modules/ProfileModule.html":{},"modules/RedisModule.html":{},"modules/SignHistoryModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["license",{"_index":795,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":772,"title":{},"body":{"index.html":{}}}],["link",{"_index":396,"title":{},"body":{"injectables/FilesService.html":{}}}],["literal",{"_index":413,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["logged",{"_index":85,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["loggedin",{"_index":246,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["logger",{"_index":420,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/RedisService.html":{}}}],["logger.log",{"_index":545,"title":{},"body":{"injectables/RedisService.html":{}}}],["logger.log('jwtstrategy",{"_index":446,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["logger.log('redisservice",{"_index":544,"title":{},"body":{"injectables/RedisService.html":{}}}],["manager",{"_index":510,"title":{},"body":{"modules/RedisModule.html":{},"injectables/RedisService.html":{},"dependencies.html":{}}}],["matching",{"_index":32,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/EventGateway.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"modules/GatewayModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"modules/RedisModule.html":{},"injectables/RedisService.html":{},"injectables/SharpPipe.html":{},"controllers/SignHistoryController.html":{},"modules/SignHistoryModule.html":{},"injectables/SignHistoryService.html":{},"classes/SignIn.html":{},"classes/SignUp.html":{},"classes/TokenPayload.html":{},"classes/TokenResponse.html":{},"classes/UserRequest.html":{},"classes/UserResponse.html":{},"classes/UserUpdate.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["math.floor(date.now",{"_index":235,"title":{},"body":{"injectables/AuthService.html":{}}}],["math.random().tostring(36).substring(2",{"_index":557,"title":{},"body":{"injectables/SharpPipe.html":{}}}],["max",{"_index":312,"title":{},"body":{"controllers/FilesController.html":{}}}],["maxlength",{"_index":608,"title":{},"body":{"classes/SignIn.html":{},"classes/SignUp.html":{},"classes/TokenPayload.html":{},"classes/TokenResponse.html":{}}}],["maxlength(15",{"_index":623,"title":{},"body":{"classes/SignIn.html":{},"classes/SignUp.html":{},"classes/TokenPayload.html":{},"classes/TokenResponse.html":{}}}],["maxlength(50",{"_index":620,"title":{},"body":{"classes/SignIn.html":{},"classes/SignUp.html":{},"classes/TokenPayload.html":{},"classes/TokenResponse.html":{}}}],["maxsize",{"_index":354,"title":{},"body":{"controllers/FilesController.html":{}}}],["memorystorage",{"_index":367,"title":{},"body":{"modules/FilesModule.html":{}}}],["messagebody",{"_index":272,"title":{},"body":{"classes/EventGateway.html":{}}}],["metadata",{"_index":731,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/EventGateway.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"injectables/RedisService.html":{},"injectables/SharpPipe.html":{},"controllers/SignHistoryController.html":{},"injectables/SignHistoryService.html":{},"injectables/UsersService.html":{}}}],["mini",{"_index":203,"title":{},"body":{"injectables/AuthService.html":{}}}],["mini/i",{"_index":201,"title":{},"body":{"injectables/AuthService.html":{}}}],["minlength",{"_index":612,"title":{},"body":{"classes/SignIn.html":{},"classes/SignUp.html":{},"classes/TokenPayload.html":{},"classes/TokenResponse.html":{}}}],["minlength(4",{"_index":621,"title":{},"body":{"classes/SignIn.html":{},"classes/SignUp.html":{},"classes/TokenPayload.html":{},"classes/TokenResponse.html":{}}}],["miscellaneous",{"_index":736,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":771,"title":{},"body":{"index.html":{}}}],["mode",{"_index":761,"title":{},"body":{"index.html":{}}}],["module",{"_index":33,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FilesModule.html":{},"modules/GatewayModule.html":{},"modules/PrismaModule.html":{},"modules/ProfileModule.html":{},"modules/RedisModule.html":{},"modules/SignHistoryModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FilesModule.html":{},"modules/GatewayModule.html":{},"modules/PrismaModule.html":{},"modules/ProfileModule.html":{},"modules/RedisModule.html":{},"modules/SignHistoryModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["modules",{"_index":35,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FilesModule.html":{},"modules/GatewayModule.html":{},"modules/PrismaModule.html":{},"modules/ProfileModule.html":{},"modules/RedisModule.html":{},"modules/SignHistoryModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":784,"title":{},"body":{"index.html":{}}}],["multer",{"_index":368,"title":{},"body":{"modules/FilesModule.html":{}}}],["multermodule",{"_index":366,"title":{},"body":{"modules/FilesModule.html":{}}}],["multermodule.register",{"_index":369,"title":{},"body":{"modules/FilesModule.html":{}}}],["myśliwiec",{"_index":790,"title":{},"body":{"index.html":{}}}],["name",{"_index":92,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/EventGateway.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"injectables/JwtStrategy.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"injectables/RedisService.html":{},"injectables/SharpPipe.html":{},"controllers/SignHistoryController.html":{},"injectables/SignHistoryService.html":{},"classes/SignIn.html":{},"classes/SignUp.html":{},"classes/TokenPayload.html":{},"classes/TokenResponse.html":{},"classes/UserRequest.html":{},"classes/UserResponse.html":{},"classes/UserUpdate.html":{},"injectables/UsersService.html":{}}}],["name'})@apiokresponse({description",{"_index":301,"title":{},"body":{"controllers/FilesController.html":{}}}],["nest",{"_index":749,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":794,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":28,"title":{},"body":{"controllers/AppController.html":{}}}],["nestjs/cache",{"_index":509,"title":{},"body":{"modules/RedisModule.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/EventGateway.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"modules/GatewayModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"modules/RedisModule.html":{},"injectables/RedisService.html":{},"injectables/SharpPipe.html":{},"controllers/SignHistoryController.html":{},"modules/SignHistoryModule.html":{},"injectables/SignHistoryService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":713,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":140,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":715,"title":{},"body":{"dependencies.html":{}}}],["nestjs/passport",{"_index":138,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":325,"title":{},"body":{"controllers/FilesController.html":{},"modules/FilesModule.html":{},"dependencies.html":{}}}],["nestjs/swagger",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/FilesController.html":{},"controllers/ProfileController.html":{},"controllers/SignHistoryController.html":{},"classes/SignIn.html":{},"classes/SignUp.html":{},"classes/TokenPayload.html":{},"classes/TokenResponse.html":{},"classes/UserRequest.html":{},"classes/UserResponse.html":{},"classes/UserUpdate.html":{},"dependencies.html":{}}}],["nestjs/websockets",{"_index":275,"title":{},"body":{"classes/EventGateway.html":{},"dependencies.html":{}}}],["new",{"_index":241,"title":{},"body":{"injectables/AuthService.html":{},"controllers/FilesController.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["node.js",{"_index":742,"title":{},"body":{"index.html":{}}}],["npm",{"_index":754,"title":{},"body":{"index.html":{}}}],["number",{"_index":429,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/RedisService.html":{},"injectables/SignHistoryService.html":{},"classes/SignIn.html":{},"classes/SignUp.html":{},"classes/TokenPayload.html":{},"classes/TokenResponse.html":{},"classes/UserRequest.html":{},"classes/UserResponse.html":{},"classes/UserUpdate.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["object",{"_index":348,"title":{},"body":{"controllers/FilesController.html":{}}}],["on('data",{"_index":391,"title":{},"body":{"injectables/FilesService.html":{}}}],["on('end",{"_index":394,"title":{},"body":{"injectables/FilesService.html":{}}}],["on('error",{"_index":385,"title":{},"body":{"injectables/FilesService.html":{}}}],["once('data",{"_index":388,"title":{},"body":{"injectables/FilesService.html":{}}}],["onmoduleinit",{"_index":259,"title":{},"body":{"classes/EventGateway.html":{},"injectables/PrismaService.html":{}}}],["open",{"_index":773,"title":{},"body":{"index.html":{}}}],["opera",{"_index":202,"title":{},"body":{"injectables/AuthService.html":{}}}],["optional",{"_index":94,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/EventGateway.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"injectables/JwtStrategy.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"injectables/RedisService.html":{},"injectables/SharpPipe.html":{},"controllers/SignHistoryController.html":{},"injectables/SignHistoryService.html":{},"classes/UserResponse.html":{},"classes/UserUpdate.html":{},"injectables/UsersService.html":{}}}],["orderby",{"_index":602,"title":{},"body":{"injectables/SignHistoryService.html":{}}}],["out",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FilesModule.html":{},"modules/GatewayModule.html":{},"modules/PrismaModule.html":{},"modules/ProfileModule.html":{},"modules/RedisModule.html":{},"modules/SignHistoryModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["overview",{"_index":799,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":709,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":319,"title":{},"body":{"controllers/FilesController.html":{}}}],["param('filename",{"_index":340,"title":{},"body":{"controllers/FilesController.html":{}}}],["parameters",{"_index":91,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/EventGateway.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"injectables/JwtStrategy.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"injectables/RedisService.html":{},"injectables/SharpPipe.html":{},"controllers/SignHistoryController.html":{},"injectables/SignHistoryService.html":{},"injectables/UsersService.html":{}}}],["parsefilepipebuilder",{"_index":320,"title":{},"body":{"controllers/FilesController.html":{}}}],["passport",{"_index":424,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":137,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":421,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":407,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":88,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/SignIn.html":{},"classes/SignUp.html":{},"classes/TokenPayload.html":{},"classes/TokenResponse.html":{},"classes/UserRequest.html":{},"classes/UserResponse.html":{},"classes/UserUpdate.html":{},"injectables/UsersService.html":{}}}],["patch",{"_index":475,"title":{},"body":{"controllers/ProfileController.html":{}}}],["patch()@apioperation({summary",{"_index":472,"title":{},"body":{"controllers/ProfileController.html":{}}}],["path",{"_index":381,"title":{},"body":{"injectables/FilesService.html":{},"injectables/SharpPipe.html":{}}}],["payload",{"_index":231,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["payload.exp",{"_index":233,"title":{},"body":{"injectables/AuthService.html":{}}}],["pipetransform",{"_index":554,"title":{},"body":{"injectables/SharpPipe.html":{}}}],["please",{"_index":782,"title":{},"body":{"index.html":{}}}],["post",{"_index":104,"title":{},"body":{"controllers/AuthController.html":{},"controllers/FilesController.html":{}}}],["post('/signin",{"_index":121,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('/signin')@apioperation({summary",{"_index":80,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('/signup",{"_index":125,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('/signup')@apioperation({summary",{"_index":97,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('/upload",{"_index":343,"title":{},"body":{"controllers/FilesController.html":{}}}],["post('/upload')@apioperation({summary",{"_index":305,"title":{},"body":{"controllers/FilesController.html":{}}}],["prefix",{"_index":7,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/FilesController.html":{},"controllers/ProfileController.html":{},"controllers/SignHistoryController.html":{}}}],["prisma",{"_index":178,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SignHistoryService.html":{},"classes/SignIn.html":{},"classes/SignUp.html":{},"classes/TokenPayload.html":{},"classes/TokenResponse.html":{},"classes/UserRequest.html":{},"classes/UserResponse.html":{},"classes/UserUpdate.html":{},"injectables/UsersService.html":{}}}],["prisma.service",{"_index":455,"title":{},"body":{"modules/PrismaModule.html":{}}}],["prisma.signhistoryuncheckedcreateinput",{"_index":593,"title":{},"body":{"injectables/SignHistoryService.html":{}}}],["prisma.usercreateinput",{"_index":622,"title":{},"body":{"classes/SignIn.html":{},"classes/SignUp.html":{},"classes/TokenPayload.html":{},"classes/TokenResponse.html":{},"classes/UserRequest.html":{},"classes/UserResponse.html":{},"classes/UserUpdate.html":{}}}],["prisma.userupdateinput",{"_index":619,"title":{},"body":{"classes/SignIn.html":{},"classes/SignUp.html":{},"classes/TokenPayload.html":{},"classes/TokenResponse.html":{},"classes/UserRequest.html":{},"classes/UserResponse.html":{},"classes/UserUpdate.html":{}}}],["prisma.userwhereuniqueinput",{"_index":165,"title":{},"body":{"injectables/AuthService.html":{}}}],["prisma/client",{"_index":179,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PrismaService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"controllers/SignHistoryController.html":{},"injectables/SignHistoryService.html":{},"classes/SignIn.html":{},"classes/SignUp.html":{},"classes/TokenPayload.html":{},"classes/TokenResponse.html":{},"classes/UserRequest.html":{},"classes/UserResponse.html":{},"classes/UserUpdate.html":{},"dependencies.html":{}}}],["prisma/prisma.module",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["prismaclient",{"_index":457,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prismamodule",{"_index":47,"title":{"modules/PrismaModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/SignHistoryModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["prismaservice",{"_index":453,"title":{"injectables/PrismaService.html":{}},"body":{"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"injectables/SignHistoryService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["private",{"_index":150,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/ProfileService.html":{},"injectables/RedisService.html":{}}}],["process.env.jwt_access_expires_in",{"_index":226,"title":{},"body":{"injectables/AuthService.html":{}}}],["process.env.jwt_access_secret_key",{"_index":224,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["process.env.jwt_issuer",{"_index":442,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["process.env.jwt_refresh_expires_in",{"_index":230,"title":{},"body":{"injectables/AuthService.html":{}}}],["process.env.jwt_refresh_secret_key",{"_index":229,"title":{},"body":{"injectables/AuthService.html":{}}}],["process.env.redis_url",{"_index":518,"title":{},"body":{"modules/RedisModule.html":{}}}],["production",{"_index":763,"title":{},"body":{"index.html":{}}}],["profile",{"_index":467,"title":{},"body":{"controllers/ProfileController.html":{}}}],["profile'})@apibearerauth()@apicreatedresponse({description",{"_index":473,"title":{},"body":{"controllers/ProfileController.html":{}}}],["profile'})@apibearerauth()@apiokresponse({description",{"_index":466,"title":{},"body":{"controllers/ProfileController.html":{}}}],["profile.controller",{"_index":490,"title":{},"body":{"modules/ProfileModule.html":{}}}],["profile.service",{"_index":477,"title":{},"body":{"controllers/ProfileController.html":{},"modules/ProfileModule.html":{}}}],["profile/profile.module",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["profilecontroller",{"_index":460,"title":{"controllers/ProfileController.html":{}},"body":{"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"coverage.html":{}}}],["profilemodule",{"_index":48,"title":{"modules/ProfileModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProfileModule.html":{},"modules.html":{},"overview.html":{}}}],["profileservice",{"_index":476,"title":{"injectables/ProfileService.html":{}},"body":{"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"coverage.html":{},"overview.html":{}}}],["progressive",{"_index":741,"title":{},"body":{"index.html":{}}}],["project",{"_index":774,"title":{},"body":{"index.html":{}}}],["promise",{"_index":168,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SharpPipe.html":{},"injectables/UsersService.html":{}}}],["properties",{"_index":260,"title":{"properties.html":{}},"body":{"classes/EventGateway.html":{},"controllers/FilesController.html":{},"injectables/RedisService.html":{},"classes/SignIn.html":{},"classes/SignUp.html":{},"classes/TokenPayload.html":{},"classes/TokenResponse.html":{},"classes/UserRequest.html":{},"classes/UserResponse.html":{},"classes/UserUpdate.html":{},"properties.html":{}}}],["providers",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FilesModule.html":{},"modules/GatewayModule.html":{},"modules/PrismaModule.html":{},"modules/ProfileModule.html":{},"modules/RedisModule.html":{},"modules/SignHistoryModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["public",{"_index":542,"title":{},"body":{"injectables/RedisService.html":{}}}],["query",{"_index":321,"title":{},"body":{"controllers/FilesController.html":{}}}],["query('token",{"_index":341,"title":{},"body":{"controllers/FilesController.html":{}}}],["randomname",{"_index":556,"title":{},"body":{"injectables/SharpPipe.html":{}}}],["randomuuid",{"_index":184,"title":{},"body":{"injectables/AuthService.html":{}}}],["randomuuid().tostring().replaceall",{"_index":214,"title":{},"body":{"injectables/AuthService.html":{}}}],["read",{"_index":783,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":120,"title":{},"body":{"controllers/AuthController.html":{},"controllers/FilesController.html":{},"controllers/ProfileController.html":{},"injectables/RedisService.html":{},"controllers/SignHistoryController.html":{}}}],["redis",{"_index":161,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"modules/RedisModule.html":{},"dependencies.html":{}}}],["redis.service",{"_index":507,"title":{},"body":{"modules/RedisModule.html":{}}}],["redis/redis.module",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["redisclientoptions",{"_index":511,"title":{},"body":{"modules/RedisModule.html":{}}}],["redismodule",{"_index":49,"title":{"modules/RedisModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/RedisModule.html":{},"modules.html":{},"overview.html":{}}}],["redisservice",{"_index":162,"title":{"injectables/RedisService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"modules/RedisModule.html":{},"injectables/RedisService.html":{},"coverage.html":{},"overview.html":{}}}],["redisstore",{"_index":512,"title":{},"body":{"modules/RedisModule.html":{}}}],["refid",{"_index":228,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["reflect",{"_index":730,"title":{},"body":{"dependencies.html":{}}}],["refreshtoken",{"_index":227,"title":{},"body":{"injectables/AuthService.html":{},"classes/SignIn.html":{},"classes/SignUp.html":{},"classes/TokenPayload.html":{},"classes/TokenResponse.html":{}}}],["registered",{"_index":127,"title":{},"body":{"controllers/AuthController.html":{}}}],["registered.'})@apibadrequestresponse({description",{"_index":100,"title":{},"body":{"controllers/AuthController.html":{}}}],["remove",{"_index":523,"title":{},"body":{"injectables/RedisService.html":{}}}],["remove(key",{"_index":531,"title":{},"body":{"injectables/RedisService.html":{}}}],["repository",{"_index":752,"title":{},"body":{"index.html":{}}}],["req",{"_index":77,"title":{},"body":{"controllers/AuthController.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"injectables/ProfileService.html":{},"injectables/SignHistoryService.html":{},"injectables/UsersService.html":{}}}],["req.password",{"_index":686,"title":{},"body":{"injectables/UsersService.html":{}}}],["req.protocol}://${req.get('host')}/v1/files/${file",{"_index":397,"title":{},"body":{"injectables/FilesService.html":{}}}],["request",{"_index":78,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"miscellaneous/variables.html":{}}}],["request.user",{"_index":813,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":316,"title":{},"body":{"controllers/FilesController.html":{},"classes/SignIn.html":{},"classes/SignUp.html":{},"classes/TokenPayload.html":{},"classes/TokenResponse.html":{},"classes/UserRequest.html":{},"classes/UserResponse.html":{},"classes/UserUpdate.html":{}}}],["res",{"_index":298,"title":{},"body":{"controllers/FilesController.html":{},"injectables/FilesService.html":{},"injectables/RedisService.html":{}}}],["res.end.bind(res",{"_index":395,"title":{},"body":{"injectables/FilesService.html":{}}}],["res.set('content",{"_index":389,"title":{},"body":{"injectables/FilesService.html":{}}}],["res.status(httpstatus.not_found).end",{"_index":387,"title":{},"body":{"injectables/FilesService.html":{}}}],["res.status(httpstatus.unauthorized).end",{"_index":383,"title":{},"body":{"injectables/FilesService.html":{}}}],["res.write(chunk",{"_index":393,"title":{},"body":{"injectables/FilesService.html":{}}}],["reset",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FilesModule.html":{},"modules/GatewayModule.html":{},"modules/PrismaModule.html":{},"modules/ProfileModule.html":{},"modules/RedisModule.html":{},"modules/SignHistoryModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["resize(800",{"_index":562,"title":{},"body":{"injectables/SharpPipe.html":{}}}],["response",{"_index":299,"title":{},"body":{"controllers/FilesController.html":{},"injectables/FilesService.html":{}}}],["results",{"_index":31,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/EventGateway.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"modules/GatewayModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"modules/RedisModule.html":{},"injectables/RedisService.html":{},"injectables/SharpPipe.html":{},"controllers/SignHistoryController.html":{},"modules/SignHistoryModule.html":{},"injectables/SignHistoryService.html":{},"classes/SignIn.html":{},"classes/SignUp.html":{},"classes/TokenPayload.html":{},"classes/TokenResponse.html":{},"classes/UserRequest.html":{},"classes/UserResponse.html":{},"classes/UserUpdate.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/EventGateway.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"injectables/JwtStrategy.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"injectables/RedisService.html":{},"injectables/SharpPipe.html":{},"controllers/SignHistoryController.html":{},"injectables/SignHistoryService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/EventGateway.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"injectables/RedisService.html":{},"injectables/SharpPipe.html":{},"controllers/SignHistoryController.html":{},"injectables/SignHistoryService.html":{},"injectables/UsersService.html":{}}}],["roundsofhashing",{"_index":189,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["run",{"_index":758,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":733,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":746,"title":{},"body":{"index.html":{}}}],["schema",{"_index":347,"title":{},"body":{"controllers/FilesController.html":{}}}],["secret",{"_index":223,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["secretorkey",{"_index":428,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["select",{"_index":600,"title":{},"body":{"injectables/SignHistoryService.html":{},"injectables/UsersService.html":{}}}],["selectpassword",{"_index":672,"title":{},"body":{"injectables/UsersService.html":{}}}],["self",{"_index":493,"title":{},"body":{"injectables/ProfileService.html":{}}}],["self(auth",{"_index":495,"title":{},"body":{"injectables/ProfileService.html":{}}}],["server",{"_index":117,"title":{},"body":{"controllers/AuthController.html":{},"classes/EventGateway.html":{},"controllers/FilesController.html":{},"controllers/ProfileController.html":{},"controllers/SignHistoryController.html":{},"index.html":{}}}],["set",{"_index":524,"title":{},"body":{"injectables/RedisService.html":{}}}],["set(key",{"_index":533,"title":{},"body":{"injectables/RedisService.html":{}}}],["sharp",{"_index":555,"title":{},"body":{"injectables/SharpPipe.html":{},"dependencies.html":{}}}],["sharp(image.buffer",{"_index":561,"title":{},"body":{"injectables/SharpPipe.html":{}}}],["sharp.pipe",{"_index":330,"title":{},"body":{"controllers/FilesController.html":{}}}],["sharppipe",{"_index":329,"title":{"injectables/SharpPipe.html":{}},"body":{"controllers/FilesController.html":{},"injectables/SharpPipe.html":{},"coverage.html":{}}}],["side",{"_index":747,"title":{},"body":{"index.html":{}}}],["sign",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/SignHistoryController.html":{},"modules/SignHistoryModule.html":{}}}],["signhistorycontroller",{"_index":567,"title":{"controllers/SignHistoryController.html":{}},"body":{"controllers/SignHistoryController.html":{},"modules/SignHistoryModule.html":{},"coverage.html":{}}}],["signhistorymodule",{"_index":50,"title":{"modules/SignHistoryModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/SignHistoryModule.html":{},"modules.html":{},"overview.html":{}}}],["signhistoryservice",{"_index":158,"title":{"injectables/SignHistoryService.html":{}},"body":{"injectables/AuthService.html":{},"controllers/SignHistoryController.html":{},"modules/SignHistoryModule.html":{},"injectables/SignHistoryService.html":{},"coverage.html":{},"overview.html":{}}}],["signin",{"_index":74,"title":{"classes/SignIn.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/SignIn.html":{},"classes/SignUp.html":{},"classes/TokenPayload.html":{},"classes/TokenResponse.html":{},"coverage.html":{}}}],["signin(@body",{"_index":123,"title":{},"body":{"controllers/AuthController.html":{}}}],["signin(body",{"_index":76,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["signin:14",{"_index":629,"title":{},"body":{"classes/SignUp.html":{}}}],["signin:26",{"_index":630,"title":{},"body":{"classes/SignUp.html":{}}}],["signin})@apicreatedresponse({description",{"_index":82,"title":{},"body":{"controllers/AuthController.html":{}}}],["signup",{"_index":75,"title":{"classes/SignUp.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/SignIn.html":{},"classes/SignUp.html":{},"classes/TokenPayload.html":{},"classes/TokenResponse.html":{},"coverage.html":{}}}],["signup(@body",{"_index":128,"title":{},"body":{"controllers/AuthController.html":{}}}],["signup(body",{"_index":96,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["signup})@apicreatedresponse({description",{"_index":99,"title":{},"body":{"controllers/AuthController.html":{}}}],["size",{"_index":311,"title":{},"body":{"controllers/FilesController.html":{}}}],["socket",{"_index":281,"title":{},"body":{"classes/EventGateway.html":{}}}],["socket.io",{"_index":276,"title":{},"body":{"classes/EventGateway.html":{},"dependencies.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/EventGateway.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"modules/GatewayModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"modules/RedisModule.html":{},"injectables/RedisService.html":{},"injectables/SharpPipe.html":{},"controllers/SignHistoryController.html":{},"modules/SignHistoryModule.html":{},"injectables/SignHistoryService.html":{},"classes/SignIn.html":{},"classes/SignUp.html":{},"classes/TokenPayload.html":{},"classes/TokenResponse.html":{},"classes/UserRequest.html":{},"classes/UserResponse.html":{},"classes/UserUpdate.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["sponsors",{"_index":777,"title":{},"body":{"index.html":{}}}],["src/.../auth.decorator.ts",{"_index":806,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth.service.ts",{"_index":807,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":738,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../users.service.ts",{"_index":808,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:8",{"_index":14,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":55,"title":{},"body":{"modules/AppModule.html":{}}}],["src/auth/auth.controller.ts",{"_index":72,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:30",{"_index":90,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:43",{"_index":103,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.decorator",{"_index":478,"title":{},"body":{"controllers/ProfileController.html":{},"controllers/SignHistoryController.html":{}}}],["src/auth/auth.decorator.ts",{"_index":698,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/auth.model.ts",{"_index":606,"title":{},"body":{"classes/SignIn.html":{},"classes/SignUp.html":{},"classes/TokenPayload.html":{},"classes/TokenResponse.html":{},"coverage.html":{}}}],["src/auth/auth.model.ts:14",{"_index":610,"title":{},"body":{"classes/SignIn.html":{}}}],["src/auth/auth.model.ts:26",{"_index":614,"title":{},"body":{"classes/SignIn.html":{}}}],["src/auth/auth.model.ts:40",{"_index":627,"title":{},"body":{"classes/SignUp.html":{}}}],["src/auth/auth.model.ts:49",{"_index":638,"title":{},"body":{"classes/TokenResponse.html":{}}}],["src/auth/auth.model.ts:50",{"_index":639,"title":{},"body":{"classes/TokenResponse.html":{}}}],["src/auth/auth.model.ts:54",{"_index":635,"title":{},"body":{"classes/TokenPayload.html":{}}}],["src/auth/auth.model.ts:55",{"_index":636,"title":{},"body":{"classes/TokenPayload.html":{}}}],["src/auth/auth.model.ts:56",{"_index":632,"title":{},"body":{"classes/TokenPayload.html":{}}}],["src/auth/auth.model.ts:57",{"_index":631,"title":{},"body":{"classes/TokenPayload.html":{}}}],["src/auth/auth.model.ts:58",{"_index":634,"title":{},"body":{"classes/TokenPayload.html":{}}}],["src/auth/auth.model.ts:59",{"_index":633,"title":{},"body":{"classes/TokenPayload.html":{}}}],["src/auth/auth.module",{"_index":365,"title":{},"body":{"modules/FilesModule.html":{}}}],["src/auth/auth.module.ts",{"_index":135,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":149,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/auth.service.ts:110",{"_index":176,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:15",{"_index":163,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:24",{"_index":173,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:28",{"_index":170,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:46",{"_index":167,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:89",{"_index":174,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/jwt",{"_index":278,"title":{},"body":{"classes/EventGateway.html":{},"controllers/FilesController.html":{},"injectables/JwtAuthGuard.html":{},"controllers/ProfileController.html":{},"controllers/SignHistoryController.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy",{"_index":377,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/auth/jwt.strategy.ts",{"_index":406,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy.ts:10",{"_index":411,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/jwt.strategy.ts:22",{"_index":414,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/jwt.strategy.ts:50",{"_index":416,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/jwt.strategy.ts:65",{"_index":418,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/files/files.controller.ts",{"_index":292,"title":{},"body":{"controllers/FilesController.html":{},"coverage.html":{}}}],["src/files/files.controller.ts:50",{"_index":302,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/files/files.controller.ts:83",{"_index":317,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/files/files.module.ts",{"_index":363,"title":{},"body":{"modules/FilesModule.html":{}}}],["src/files/files.service.ts",{"_index":371,"title":{},"body":{"injectables/FilesService.html":{},"coverage.html":{}}}],["src/files/files.service.ts:11",{"_index":375,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/files/files.service.ts:30",{"_index":376,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/files/files.service.ts:8",{"_index":373,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/files/sharp.pipe.ts",{"_index":549,"title":{},"body":{"injectables/SharpPipe.html":{},"coverage.html":{}}}],["src/files/sharp.pipe.ts:9",{"_index":553,"title":{},"body":{"injectables/SharpPipe.html":{}}}],["src/gateway/events.gateway",{"_index":498,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/gateway/events.gateway.ts",{"_index":257,"title":{},"body":{"classes/EventGateway.html":{},"coverage.html":{}}}],["src/gateway/events.gateway.ts:15",{"_index":263,"title":{},"body":{"classes/EventGateway.html":{}}}],["src/gateway/events.gateway.ts:17",{"_index":269,"title":{},"body":{"classes/EventGateway.html":{}}}],["src/gateway/events.gateway.ts:25",{"_index":266,"title":{},"body":{"classes/EventGateway.html":{}}}],["src/gateway/gateway.module",{"_index":491,"title":{},"body":{"modules/ProfileModule.html":{}}}],["src/gateway/gateway.module.ts",{"_index":400,"title":{},"body":{"modules/GatewayModule.html":{}}}],["src/main.ts",{"_index":704,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/prisma/prisma.module",{"_index":141,"title":{},"body":{"modules/AuthModule.html":{},"modules/SignHistoryModule.html":{},"modules/UsersModule.html":{}}}],["src/prisma/prisma.module.ts",{"_index":454,"title":{},"body":{"modules/PrismaModule.html":{}}}],["src/prisma/prisma.service",{"_index":598,"title":{},"body":{"injectables/SignHistoryService.html":{},"injectables/UsersService.html":{}}}],["src/prisma/prisma.service.ts",{"_index":456,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{}}}],["src/prisma/prisma.service.ts:6",{"_index":458,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/profile/profile.controller.ts",{"_index":461,"title":{},"body":{"controllers/ProfileController.html":{},"coverage.html":{}}}],["src/profile/profile.controller.ts:36",{"_index":468,"title":{},"body":{"controllers/ProfileController.html":{}}}],["src/profile/profile.controller.ts:46",{"_index":474,"title":{},"body":{"controllers/ProfileController.html":{}}}],["src/profile/profile.module.ts",{"_index":489,"title":{},"body":{"modules/ProfileModule.html":{}}}],["src/profile/profile.service.ts",{"_index":492,"title":{},"body":{"injectables/ProfileService.html":{},"coverage.html":{}}}],["src/profile/profile.service.ts:14",{"_index":496,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/profile/profile.service.ts:18",{"_index":497,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/profile/profile.service.ts:8",{"_index":494,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/redis/redis.module",{"_index":145,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/redis/redis.module.ts",{"_index":506,"title":{},"body":{"modules/RedisModule.html":{}}}],["src/redis/redis.service",{"_index":183,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["src/redis/redis.service.ts",{"_index":520,"title":{},"body":{"injectables/RedisService.html":{},"coverage.html":{}}}],["src/redis/redis.service.ts:10",{"_index":529,"title":{},"body":{"injectables/RedisService.html":{}}}],["src/redis/redis.service.ts:16",{"_index":536,"title":{},"body":{"injectables/RedisService.html":{}}}],["src/redis/redis.service.ts:23",{"_index":532,"title":{},"body":{"injectables/RedisService.html":{}}}],["src/redis/redis.service.ts:28",{"_index":527,"title":{},"body":{"injectables/RedisService.html":{}}}],["src/redis/redis.service.ts:5",{"_index":526,"title":{},"body":{"injectables/RedisService.html":{}}}],["src/redis/redis.service.ts:8",{"_index":539,"title":{},"body":{"injectables/RedisService.html":{}}}],["src/sign",{"_index":144,"title":{},"body":{"modules/AuthModule.html":{},"controllers/SignHistoryController.html":{},"modules/SignHistoryModule.html":{},"injectables/SignHistoryService.html":{},"coverage.html":{}}}],["src/users/users.model",{"_index":479,"title":{},"body":{"controllers/ProfileController.html":{},"injectables/ProfileService.html":{}}}],["src/users/users.model.ts",{"_index":641,"title":{},"body":{"classes/UserRequest.html":{},"classes/UserResponse.html":{},"classes/UserUpdate.html":{},"coverage.html":{}}}],["src/users/users.model.ts:16",{"_index":659,"title":{},"body":{"classes/UserUpdate.html":{}}}],["src/users/users.model.ts:18",{"_index":660,"title":{},"body":{"classes/UserUpdate.html":{}}}],["src/users/users.model.ts:25",{"_index":658,"title":{},"body":{"classes/UserUpdate.html":{}}}],["src/users/users.model.ts:29",{"_index":655,"title":{},"body":{"classes/UserResponse.html":{}}}],["src/users/users.model.ts:30",{"_index":656,"title":{},"body":{"classes/UserResponse.html":{}}}],["src/users/users.model.ts:31",{"_index":654,"title":{},"body":{"classes/UserResponse.html":{}}}],["src/users/users.model.ts:32",{"_index":657,"title":{},"body":{"classes/UserResponse.html":{}}}],["src/users/users.model.ts:33",{"_index":652,"title":{},"body":{"classes/UserResponse.html":{}}}],["src/users/users.model.ts:34",{"_index":653,"title":{},"body":{"classes/UserResponse.html":{}}}],["src/users/users.model.ts:5",{"_index":643,"title":{},"body":{"classes/UserRequest.html":{}}}],["src/users/users.model.ts:6",{"_index":642,"title":{},"body":{"classes/UserRequest.html":{}}}],["src/users/users.model.ts:7",{"_index":644,"title":{},"body":{"classes/UserRequest.html":{}}}],["src/users/users.module",{"_index":143,"title":{},"body":{"modules/AuthModule.html":{},"modules/ProfileModule.html":{}}}],["src/users/users.module.ts",{"_index":665,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.service",{"_index":181,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/ProfileService.html":{}}}],["src/users/users.service.ts",{"_index":667,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/users/users.service.ts:12",{"_index":676,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:24",{"_index":680,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:38",{"_index":678,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:57",{"_index":673,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:75",{"_index":682,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:9",{"_index":671,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:98",{"_index":675,"title":{},"body":{"injectables/UsersService.html":{}}}],["start",{"_index":759,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":762,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":764,"title":{},"body":{"index.html":{}}}],["started",{"_index":740,"title":{"index.html":{}},"body":{}}],["starter",{"_index":751,"title":{},"body":{"index.html":{}}}],["statements",{"_index":694,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":521,"title":{},"body":{"injectables/RedisService.html":{}}}],["stay",{"_index":786,"title":{},"body":{"index.html":{}}}],["storage",{"_index":370,"title":{},"body":{"modules/FilesModule.html":{}}}],["store",{"_index":516,"title":{},"body":{"modules/RedisModule.html":{},"dependencies.html":{}}}],["strategy",{"_index":423,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["string",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"injectables/JwtStrategy.html":{},"injectables/RedisService.html":{},"classes/SignIn.html":{},"classes/SignUp.html":{},"classes/TokenPayload.html":{},"classes/TokenResponse.html":{},"classes/UserRequest.html":{},"classes/UserResponse.html":{},"classes/UserUpdate.html":{},"injectables/UsersService.html":{}}}],["sub",{"_index":217,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"classes/SignIn.html":{},"classes/SignUp.html":{},"classes/TokenPayload.html":{},"classes/TokenResponse.html":{}}}],["subscribe",{"_index":287,"title":{},"body":{"classes/EventGateway.html":{}}}],["subscribemessage",{"_index":273,"title":{},"body":{"classes/EventGateway.html":{}}}],["subscribemessage('events",{"_index":265,"title":{},"body":{"classes/EventGateway.html":{}}}],["successfully",{"_index":84,"title":{},"body":{"controllers/AuthController.html":{},"controllers/FilesController.html":{},"controllers/ProfileController.html":{},"controllers/SignHistoryController.html":{}}}],["successfully'})@apibadrequestresponse({description",{"_index":308,"title":{},"body":{"controllers/FilesController.html":{}}}],["summary",{"_index":122,"title":{},"body":{"controllers/AuthController.html":{},"controllers/FilesController.html":{},"controllers/ProfileController.html":{},"controllers/SignHistoryController.html":{}}}],["super",{"_index":425,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["support",{"_index":778,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":797,"title":{},"body":{"modules.html":{}}}],["table",{"_index":708,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":707,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":767,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":770,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":769,"title":{},"body":{"index.html":{}}}],["tests",{"_index":766,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":776,"title":{},"body":{"index.html":{}}}],["this.$connect",{"_index":459,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.authservice.signin(body",{"_index":124,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.signup(body",{"_index":129,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.cache.del(key",{"_index":547,"title":{},"body":{"injectables/RedisService.html":{}}}],["this.cache.get(key",{"_index":543,"title":{},"body":{"injectables/RedisService.html":{}}}],["this.cache.reset",{"_index":548,"title":{},"body":{"injectables/RedisService.html":{}}}],["this.cache.set(key",{"_index":546,"title":{},"body":{"injectables/RedisService.html":{}}}],["this.createtoken(user",{"_index":249,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.events.handleevent('update",{"_index":500,"title":{},"body":{"injectables/ProfileService.html":{}}}],["this.filesservice.findbyname(filename",{"_index":342,"title":{},"body":{"controllers/FilesController.html":{}}}],["this.filesservice.uploadfile(file",{"_index":359,"title":{},"body":{"controllers/FilesController.html":{}}}],["this.getdevice(ua",{"_index":208,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.getuseragent(http",{"_index":207,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwt.decode(accesstoken",{"_index":232,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwt.decode(token",{"_index":445,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["this.jwt.sign",{"_index":430,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["this.jwt.verify(token",{"_index":382,"title":{},"body":{"injectables/FilesService.html":{}}}],["this.jwtstrategy.generatetoken",{"_index":216,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.prisma.signhistory.count",{"_index":604,"title":{},"body":{"injectables/SignHistoryService.html":{}}}],["this.prisma.signhistory.create",{"_index":605,"title":{},"body":{"injectables/SignHistoryService.html":{}}}],["this.prisma.signhistory.findmany",{"_index":599,"title":{},"body":{"injectables/SignHistoryService.html":{}}}],["this.prisma.user.create",{"_index":688,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.prisma.user.delete",{"_index":690,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.prisma.user.findmany",{"_index":684,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.prisma.user.findunique",{"_index":685,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.prisma.user.update",{"_index":689,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.profileservice.self(auth",{"_index":483,"title":{},"body":{"controllers/ProfileController.html":{}}}],["this.profileservice.update(auth",{"_index":485,"title":{},"body":{"controllers/ProfileController.html":{}}}],["this.redis.get(redisservice.token",{"_index":247,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["this.redis.set(redisservice.token",{"_index":237,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.server.emit('subscribe",{"_index":286,"title":{},"body":{"classes/EventGateway.html":{}}}],["this.server.on('connection",{"_index":280,"title":{},"body":{"classes/EventGateway.html":{}}}],["this.signhistoryservice.create",{"_index":210,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.signhistoryservice.findbyuid(auth.id",{"_index":577,"title":{},"body":{"controllers/SignHistoryController.html":{}}}],["this.usersservice.create",{"_index":251,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.findbyemail(body.email",{"_index":238,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.findbyid(auth.id",{"_index":499,"title":{},"body":{"injectables/ProfileService.html":{}}}],["this.usersservice.findbyid(payload.uid",{"_index":443,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["this.usersservice.update(auth.id",{"_index":502,"title":{},"body":{"injectables/ProfileService.html":{}}}],["throw",{"_index":240,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["timeout",{"_index":234,"title":{},"body":{"injectables/AuthService.html":{}}}],["title",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"classes/EventGateway.html":{}}}],["tofile(path.join(process.env.upload_dir",{"_index":566,"title":{},"body":{"injectables/SharpPipe.html":{}}}],["token",{"_index":297,"title":{},"body":{"controllers/FilesController.html":{},"injectables/FilesService.html":{},"injectables/JwtStrategy.html":{},"injectables/RedisService.html":{},"classes/SignIn.html":{},"classes/SignUp.html":{},"classes/TokenPayload.html":{},"classes/TokenResponse.html":{}}}],["tokenpayload",{"_index":186,"title":{"classes/TokenPayload.html":{}},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"classes/SignIn.html":{},"classes/SignUp.html":{},"classes/TokenPayload.html":{},"classes/TokenResponse.html":{},"coverage.html":{}}}],["tokenresponse",{"_index":187,"title":{"classes/TokenResponse.html":{}},"body":{"injectables/AuthService.html":{},"classes/SignIn.html":{},"classes/SignUp.html":{},"classes/TokenPayload.html":{},"classes/TokenResponse.html":{},"coverage.html":{}}}],["touch",{"_index":787,"title":{},"body":{"index.html":{}}}],["transform",{"_index":550,"title":{},"body":{"injectables/SharpPipe.html":{}}}],["transform(image",{"_index":551,"title":{},"body":{"injectables/SharpPipe.html":{}}}],["transformer",{"_index":724,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":239,"title":{},"body":{"injectables/AuthService.html":{},"controllers/FilesController.html":{},"modules/RedisModule.html":{},"injectables/SignHistoryService.html":{},"classes/SignIn.html":{},"classes/SignUp.html":{},"classes/TokenPayload.html":{},"classes/TokenResponse.html":{},"injectables/UsersService.html":{}}}],["ttl",{"_index":535,"title":{},"body":{"injectables/RedisService.html":{}}}],["twitter",{"_index":793,"title":{},"body":{"index.html":{}}}],["type",{"_index":93,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/EventGateway.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"injectables/JwtStrategy.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"modules/RedisModule.html":{},"injectables/RedisService.html":{},"injectables/SharpPipe.html":{},"controllers/SignHistoryController.html":{},"injectables/SignHistoryService.html":{},"classes/SignIn.html":{},"classes/SignUp.html":{},"classes/TokenPayload.html":{},"classes/TokenResponse.html":{},"classes/UserRequest.html":{},"classes/UserResponse.html":{},"classes/UserUpdate.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":716,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":750,"title":{},"body":{"index.html":{}}}],["ua",{"_index":206,"title":{},"body":{"injectables/AuthService.html":{}}}],["uid",{"_index":211,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/SignHistoryService.html":{},"classes/SignIn.html":{},"classes/SignUp.html":{},"classes/TokenPayload.html":{},"classes/TokenResponse.html":{}}}],["unauthorized",{"_index":338,"title":{},"body":{"controllers/FilesController.html":{},"controllers/ProfileController.html":{},"controllers/SignHistoryController.html":{}}}],["unauthorizedexception",{"_index":419,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["undefined",{"_index":315,"title":{},"body":{"controllers/FilesController.html":{}}}],["unit",{"_index":765,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":175,"title":{},"body":{"injectables/AuthService.html":{},"classes/EventGateway.html":{},"injectables/FilesService.html":{},"injectables/JwtStrategy.html":{},"injectables/ProfileService.html":{},"injectables/RedisService.html":{},"injectables/SignHistoryService.html":{},"miscellaneous/variables.html":{}}}],["unlicensed",{"_index":804,"title":{},"body":{"properties.html":{}}}],["up",{"_index":126,"title":{},"body":{"controllers/AuthController.html":{}}}],["up'})@apibody({type",{"_index":98,"title":{},"body":{"controllers/AuthController.html":{}}}],["update",{"_index":463,"title":{},"body":{"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"injectables/UsersService.html":{}}}],["update(@auth",{"_index":484,"title":{},"body":{"controllers/ProfileController.html":{}}}],["update(auth",{"_index":470,"title":{},"body":{"controllers/ProfileController.html":{},"injectables/ProfileService.html":{}}}],["update(id",{"_index":681,"title":{},"body":{"injectables/UsersService.html":{}}}],["upload",{"_index":306,"title":{},"body":{"controllers/FilesController.html":{}}}],["uploadedfile",{"_index":322,"title":{},"body":{"controllers/FilesController.html":{}}}],["uploadfile",{"_index":295,"title":{},"body":{"controllers/FilesController.html":{},"injectables/FilesService.html":{}}}],["uploadfile(file",{"_index":304,"title":{},"body":{"controllers/FilesController.html":{},"injectables/FilesService.html":{}}}],["url",{"_index":517,"title":{},"body":{"modules/RedisModule.html":{}}}],["usefactory",{"_index":515,"title":{},"body":{"modules/RedisModule.html":{}}}],["useguards",{"_index":271,"title":{},"body":{"classes/EventGateway.html":{},"controllers/FilesController.html":{},"controllers/ProfileController.html":{},"controllers/SignHistoryController.html":{}}}],["useguards(jwtauthguard",{"_index":284,"title":{},"body":{"classes/EventGateway.html":{},"controllers/FilesController.html":{},"controllers/ProfileController.html":{},"controllers/SignHistoryController.html":{}}}],["useinterceptors",{"_index":323,"title":{},"body":{"controllers/FilesController.html":{}}}],["useinterceptors(fileinterceptor('file",{"_index":344,"title":{},"body":{"controllers/FilesController.html":{}}}],["user",{"_index":83,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"controllers/SignHistoryController.html":{},"classes/SignIn.html":{},"classes/SignUp.html":{},"classes/TokenPayload.html":{},"classes/TokenResponse.html":{},"classes/UserRequest.html":{},"classes/UserResponse.html":{},"classes/UserUpdate.html":{},"miscellaneous/variables.html":{}}}],["user.avatar",{"_index":222,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.email",{"_index":220,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.id",{"_index":212,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["user.name",{"_index":218,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.password",{"_index":245,"title":{},"body":{"injectables/AuthService.html":{}}}],["useragent",{"_index":171,"title":{},"body":{"injectables/AuthService.html":{}}}],["useragent.match(/android/i",{"_index":194,"title":{},"body":{"injectables/AuthService.html":{}}}],["useragent.match(/blackberry/i",{"_index":196,"title":{},"body":{"injectables/AuthService.html":{}}}],["useragent.match(/iemobile/i",{"_index":204,"title":{},"body":{"injectables/AuthService.html":{}}}],["useragent.match(/iphone|ipad|ipod/i",{"_index":198,"title":{},"body":{"injectables/AuthService.html":{}}}],["useragent.match(/opera",{"_index":200,"title":{},"body":{"injectables/AuthService.html":{}}}],["userrequest",{"_index":640,"title":{"classes/UserRequest.html":{}},"body":{"classes/UserRequest.html":{},"classes/UserResponse.html":{},"classes/UserUpdate.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["userresponse",{"_index":649,"title":{"classes/UserResponse.html":{}},"body":{"classes/UserRequest.html":{},"classes/UserResponse.html":{},"classes/UserUpdate.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["users.model",{"_index":683,"title":{},"body":{"injectables/UsersService.html":{}}}],["users.service",{"_index":666,"title":{},"body":{"modules/UsersModule.html":{}}}],["users/users.module",{"_index":62,"title":{},"body":{"modules/AppModule.html":{}}}],["usersmodule",{"_index":51,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ProfileModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":157,"title":{"injectables/UsersService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/ProfileService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["userupdate",{"_index":471,"title":{"classes/UserUpdate.html":{}},"body":{"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/UserRequest.html":{},"classes/UserResponse.html":{},"classes/UserUpdate.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["uuid",{"_index":213,"title":{},"body":{"injectables/AuthService.html":{}}}],["v1/auth",{"_index":73,"title":{},"body":{"controllers/AuthController.html":{}}}],["v1/files",{"_index":293,"title":{},"body":{"controllers/FilesController.html":{}}}],["v1/profile",{"_index":462,"title":{},"body":{"controllers/ProfileController.html":{}}}],["validate",{"_index":409,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(payload",{"_index":415,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validator",{"_index":618,"title":{},"body":{"classes/SignIn.html":{},"classes/SignUp.html":{},"classes/TokenPayload.html":{},"classes/TokenResponse.html":{},"dependencies.html":{}}}],["value",{"_index":534,"title":{},"body":{"injectables/RedisService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":699,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":805,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verify",{"_index":410,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["verify(token",{"_index":417,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["verify](invalid",{"_index":447,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["version",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"properties.html":{}}}],["void",{"_index":270,"title":{},"body":{"classes/EventGateway.html":{}}}],["watch",{"_index":760,"title":{},"body":{"index.html":{}}}],["webp",{"_index":563,"title":{},"body":{"injectables/SharpPipe.html":{}}}],["website",{"_index":791,"title":{},"body":{"index.html":{}}}],["websocketgateway",{"_index":274,"title":{},"body":{"classes/EventGateway.html":{}}}],["websocketserver",{"_index":262,"title":{},"body":{"classes/EventGateway.html":{}}}],["wsresponse",{"_index":268,"title":{},"body":{"classes/EventGateway.html":{}}}],["yes",{"_index":537,"title":{},"body":{"injectables/RedisService.html":{}}}],["you'd",{"_index":781,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FilesModule.html":{},"modules/GatewayModule.html":{},"modules/PrismaModule.html":{},"modules/ProfileModule.html":{},"modules/RedisModule.html":{},"modules/SignHistoryModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                /\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                init\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        init\n                        \n                    \n                \n            \n            \n                \n                        \n                    init()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:8\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     { title: string; description: string; version: string; document: string; }\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { ApiExcludeController } from '@nestjs/swagger';\n\n@ApiExcludeController()\n@Controller('/')\nexport class AppController {\n  @Get()\n  init() {\n    return {\n      title: 'NestJS 101',\n      description: 'NestJS 101',\n      version: '1.0.0',\n      document: '/document',\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nFilesModule\n\nFilesModule\n\nAppModule -->\n\nFilesModule->AppModule\n\n\n\n\n\nGatewayModule\n\nGatewayModule\n\nAppModule -->\n\nGatewayModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nProfileModule\n\nProfileModule\n\nAppModule -->\n\nProfileModule->AppModule\n\n\n\n\n\nRedisModule\n\nRedisModule\n\nAppModule -->\n\nRedisModule->AppModule\n\n\n\n\n\nSignHistoryModule\n\nSignHistoryModule\n\nAppModule -->\n\nSignHistoryModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            FilesModule\n                        \n                        \n                            GatewayModule\n                        \n                        \n                            PrismaModule\n                        \n                        \n                            ProfileModule\n                        \n                        \n                            RedisModule\n                        \n                        \n                            SignHistoryModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\n\nimport { AuthModule } from './auth/auth.module';\nimport { ProfileModule } from './profile/profile.module';\nimport { PrismaModule } from './prisma/prisma.module';\nimport { UsersModule } from './users/users.module';\nimport { SignHistoryModule } from './sign-history/sign-history.module';\nimport { FilesModule } from './files/files.module';\nimport { RedisModule } from './redis/redis.module';\nimport { GatewayModule } from './gateway/gateway.module';\nimport { AppController } from './app.controller';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot(),\n    PrismaModule,\n    AuthModule,\n    ProfileModule,\n    UsersModule,\n    SignHistoryModule,\n    FilesModule,\n    RedisModule,\n    GatewayModule,\n  ],\n  controllers: [AppController],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                /v1/auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                signIn\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                signUp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        signIn\n                        \n                    \n                \n            \n            \n                \n                        \n                    signIn(body: SignIn, req: Request, ip: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/signin')@ApiOperation({summary: 'Sign in'})@ApiBody({type: SignIn})@ApiCreatedResponse({description: 'The user has been successfully logged in.'})@ApiBadRequestResponse({description: 'The user does not exist or the password is incorrect.'})\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            SignIn\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                ip\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        signUp\n                        \n                    \n                \n            \n            \n                \n                        \n                    signUp(body: SignUp, req: Request, ip: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/signup')@ApiOperation({summary: 'Sign up'})@ApiBody({type: SignUp})@ApiCreatedResponse({description: 'The user has been successfully registered.'})@ApiBadRequestResponse({description: 'The user already exists or the password is incorrect.'})\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            SignUp\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                ip\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Post, Body, Req, Ip } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { SignIn, SignUp } from './auth.model';\nimport {\n  ApiBadRequestResponse,\n  ApiBody,\n  ApiCreatedResponse,\n  ApiInternalServerErrorResponse,\n  ApiOperation,\n  ApiTags,\n} from '@nestjs/swagger';\n\n@Controller('/v1/auth')\n@ApiTags('Authentication')\n@ApiInternalServerErrorResponse({\n  description: 'Internal server error.',\n})\nexport class AuthController {\n  constructor(private readonly authService: AuthService) {}\n\n  @Post('/signin')\n  @ApiOperation({ summary: 'Sign in' })\n  @ApiBody({ type: SignIn })\n  @ApiCreatedResponse({\n    description: 'The user has been successfully logged in.',\n  })\n  @ApiBadRequestResponse({\n    description: 'The user does not exist or the password is incorrect.',\n  })\n  signIn(@Body() body: SignIn, @Req() req: Request, @Ip() ip: string) {\n    return this.authService.signIn(body, req, ip);\n  }\n\n  @Post('/signup')\n  @ApiOperation({ summary: 'Sign up' })\n  @ApiBody({ type: SignUp })\n  @ApiCreatedResponse({\n    description: 'The user has been successfully registered.',\n  })\n  @ApiBadRequestResponse({\n    description: 'The user already exists or the password is incorrect.',\n  })\n  signUp(@Body() body: SignUp, @Req() req: Request, @Ip() ip: string) {\n    return this.authService.signUp(body, req, ip);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_exports\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nPrismaModule->AuthModule\n\n\n\n\n\nRedisModule\n\nRedisModule\n\nAuthModule -->\n\nRedisModule->AuthModule\n\n\n\n\n\nSignHistoryModule\n\nSignHistoryModule\n\nAuthModule -->\n\nSignHistoryModule->AuthModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nJwtStrategy \n\nJwtStrategy \n\nJwtStrategy  -->\n\nAuthModule->JwtStrategy \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                        \n                            RedisModule\n                        \n                        \n                            SignHistoryModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { AuthController } from './auth.controller';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtModule } from '@nestjs/jwt';\nimport { PrismaModule } from 'src/prisma/prisma.module';\nimport { JwtStrategy } from './jwt.strategy';\nimport { UsersModule } from 'src/users/users.module';\nimport { SignHistoryModule } from 'src/sign-history/sign-history.module';\nimport { RedisModule } from 'src/redis/redis.module';\n\n@Module({\n  imports: [\n    PrismaModule,\n    PassportModule,\n    JwtModule.register({}),\n    UsersModule,\n    SignHistoryModule,\n    RedisModule,\n  ],\n  controllers: [AuthController],\n  providers: [AuthService, JwtStrategy],\n  exports: [AuthService, JwtStrategy],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                createToken\n                            \n                            \n                                    Private\n                                getDevice\n                            \n                            \n                                    Private\n                                getUserAgent\n                            \n                            \n                                    Async\n                                signIn\n                            \n                            \n                                    Async\n                                signUp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService, signHistoryService: SignHistoryService, jwt: JwtService, redis: RedisService, jwtStrategy: JwtStrategy)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        signHistoryService\n                                                  \n                                                        \n                                                                        SignHistoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwt\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        redis\n                                                  \n                                                        \n                                                                        RedisService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtStrategy\n                                                  \n                                                        \n                                                                        JwtStrategy\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        createToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    createToken(user: Prisma.UserWhereUniqueInput, http: Request, ip: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                        Prisma.UserWhereUniqueInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                http\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                ip\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getDevice\n                        \n                    \n                \n            \n            \n                \n                        \n                    getDevice(userAgent: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userAgent\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getUserAgent\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUserAgent(http: Request)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                http\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        signIn\n                        \n                    \n                \n            \n            \n                \n                        \n                    signIn(body: SignIn, http: Request, ip: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:89\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            SignIn\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                http\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                ip\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        signUp\n                        \n                    \n                \n            \n            \n                \n                        \n                    signUp(body: SignUp, http: Request, ip: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:110\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            SignUp\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                http\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                ip\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { Prisma } from '@prisma/client';\nimport { JwtService } from '@nestjs/jwt';\nimport * as bcrypt from 'bcrypt';\nimport { UsersService } from 'src/users/users.service';\nimport { SignHistoryService } from './../sign-history/sign-history.service';\nimport { RedisService } from 'src/redis/redis.service';\nimport { randomUUID } from 'crypto';\nimport { JwtStrategy } from './jwt.strategy';\nimport { SignIn, SignUp, TokenPayload, TokenResponse } from './auth.model';\n\nexport const roundsOfHashing = 10;\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private usersService: UsersService,\n    private signHistoryService: SignHistoryService,\n    private jwt: JwtService,\n    private redis: RedisService,\n    private jwtStrategy: JwtStrategy,\n  ) {}\n\n  private getUserAgent(http: Request): string {\n    return http.headers['user-agent'];\n  }\n\n  private getDevice(userAgent: string): string {\n    let device = 'Unknown';\n\n    if (userAgent.match(/Android/i)) {\n      device = 'Android';\n    } else if (userAgent.match(/BlackBerry/i)) {\n      device = 'BlackBerry';\n    } else if (userAgent.match(/iPhone|iPad|iPod/i)) {\n      device = 'iOS';\n    } else if (userAgent.match(/Opera Mini/i)) {\n      device = 'Opera Mini';\n    } else if (userAgent.match(/IEMobile/i)) {\n      device = 'IEMobile';\n    }\n\n    return device;\n  }\n\n  private async createToken(\n    user: Prisma.UserWhereUniqueInput,\n    http: Request,\n    ip: string,\n  ): Promise {\n    const ua = this.getUserAgent(http);\n    const device = this.getDevice(ua);\n\n    await this.signHistoryService.create({\n      uid: user.id,\n      ua: ua,\n      ip: ip,\n      device: device,\n    });\n\n    const uuid = randomUUID().toString().replaceAll('-', '');\n    const accessToken = this.jwtStrategy.generateToken({\n      sub: uuid,\n      uid: user.id,\n      name: user.name as string,\n      email: user.email,\n      avatar: user.avatar as string,\n      secret: process.env.JWT_ACCESS_SECRET_KEY,\n      expiresIn: process.env.JWT_ACCESS_EXPIRES_IN,\n    });\n    const refreshToken = this.jwtStrategy.generateToken({\n      refId: uuid,\n      secret: process.env.JWT_REFRESH_SECRET_KEY,\n      expiresIn: process.env.JWT_REFRESH_EXPIRES_IN,\n    });\n\n    const payload = this.jwt.decode(accessToken) as TokenPayload;\n    const expiresIn = payload.exp;\n    const timeout = (expiresIn - Math.floor(Date.now() / 1000)) * 1000;\n\n    await this.redis.set(RedisService.TOKEN + user.id, uuid, timeout);\n\n    return {\n      accessToken,\n      refreshToken,\n    };\n  }\n\n  async signIn(body: SignIn, http: Request, ip: string) {\n    const user = await this.usersService.findByEmail(body.email, true);\n\n    if (!user) {\n      throw new BadRequestException('Email or password is incorrect');\n    }\n\n    const isPasswordValid = await bcrypt.compare(body.password, user.password);\n\n    if (!isPasswordValid) {\n      throw new BadRequestException('Email or password is incorrect');\n    }\n\n    // const loggedIn = await this.redis.get(RedisService.TOKEN + user.id);\n    // if (loggedIn) {\n    //   throw new BadRequestException('User already logged in');\n    // }\n\n    return await this.createToken(user, http, ip);\n  }\n\n  async signUp(body: SignUp, http: Request, ip: string) {\n    const hasEmail = await this.usersService.findByEmail(body.email);\n\n    if (hasEmail) {\n      throw new BadRequestException('Email already exists');\n    }\n\n    const user = await this.usersService.create({\n      name: body.name,\n      email: body.email,\n      password: body.password,\n    });\n\n    return await this.createToken(user, http, ip);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EventGateway.html":{"url":"classes/EventGateway.html","title":"class - EventGateway","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EventGateway\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/gateway/events.gateway.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        OnModuleInit\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                server\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                handleEvent\n                            \n                            \n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        server\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Server\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @WebSocketServer()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/gateway/events.gateway.ts:15\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        handleEvent\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleEvent(data)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @SubscribeMessage('events')\n                \n            \n\n                    \n                        \n                            Defined in src/gateway/events.gateway.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     WsResponse<>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \nonModuleInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/gateway/events.gateway.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { OnModuleInit, UseGuards } from '@nestjs/common';\nimport {\n  MessageBody,\n  SubscribeMessage,\n  WebSocketGateway,\n  WebSocketServer,\n  WsResponse,\n} from '@nestjs/websockets';\nimport { Server } from 'socket.io';\nimport { JwtAuthGuard } from 'src/auth/jwt-auth.guard';\n\n@WebSocketGateway()\nexport class EventGateway implements OnModuleInit {\n  @WebSocketServer()\n  server: Server;\n\n  onModuleInit() {\n    this.server.on('connection', (socket) => {\n      console.log(socket.id + ':connected');\n    });\n  }\n\n  //   @UseGuards(JwtAuthGuard)\n  @SubscribeMessage('events')\n  handleEvent(@MessageBody() data: unknown): WsResponse {\n    this.server.emit('subscribe', {\n      title: 'subscribe',\n      content: data,\n    });\n    const event = 'events';\n    return { event, data };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/FilesController.html":{"url":"controllers/FilesController.html","title":"controller - FilesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  FilesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/files.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                /v1/files\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                findByName\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                uploadFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        findByName\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByName(fileName: string, token: string, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':fileName')@ApiOperation({summary: 'Get file by name'})@ApiOkResponse({description: 'Get file successfully'})\n                \n            \n\n                    \n                        \n                            Defined in src/files/files.controller.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fileName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                        uploadFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    uploadFile(file: string, req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/upload')@ApiOperation({summary: 'Upload file'})@UseInterceptors(undefined)@UseGuards(JwtAuthGuard)@ApiBearerAuth()@ApiCreatedResponse({description: 'Upload file successfully'})@ApiBadRequestResponse({description: 'Invalid file type (image) or file size (max 10MB)'})@ApiConsumes('multipart/form-data')@ApiBody({schema: undefined, required: true, description: 'file image'})\n                \n            \n\n                    \n                        \n                            Defined in src/files/files.controller.ts:83\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  HttpStatus,\n  Param,\n  ParseFilePipeBuilder,\n  Post,\n  Query,\n  Req,\n  Res,\n  UploadedFile,\n  UseGuards,\n  UseInterceptors,\n} from '@nestjs/common';\nimport { FileInterceptor } from '@nestjs/platform-express';\nimport { JwtAuthGuard } from 'src/auth/jwt-auth.guard';\nimport { FilesService } from './files.service';\nimport { Request, Response } from 'express';\nimport { SharpPipe } from './sharp.pipe';\nimport {\n  ApiBadRequestResponse,\n  ApiBearerAuth,\n  ApiBody,\n  ApiConsumes,\n  ApiCreatedResponse,\n  ApiInternalServerErrorResponse,\n  ApiOkResponse,\n  ApiOperation,\n  ApiResponse,\n  ApiTags,\n  ApiUnauthorizedResponse,\n} from '@nestjs/swagger';\n\n@Controller('/v1/files')\n@ApiTags('Files')\n@ApiInternalServerErrorResponse({\n  description: 'Internal server error.',\n})\n@ApiUnauthorizedResponse({\n  description: 'Unauthorized',\n})\nexport class FilesController {\n  constructor(private readonly filesService: FilesService) {}\n\n  @Get(':fileName')\n  @ApiOperation({ summary: 'Get file by name' })\n  @ApiOkResponse({\n    description: 'Get file successfully',\n  })\n  findByName(\n    @Param('fileName') fileName: string,\n    @Query('token') token: string,\n    @Res() res: Response,\n  ) {\n    return this.filesService.findByName(fileName, token, res);\n  }\n\n  @Post('/upload')\n  @ApiOperation({ summary: 'Upload file' })\n  @UseInterceptors(FileInterceptor('file'))\n  @UseGuards(JwtAuthGuard)\n  @ApiBearerAuth()\n  @ApiCreatedResponse({\n    description: 'Upload file successfully',\n  })\n  @ApiBadRequestResponse({\n    description: 'Invalid file type (image) or file size (max 10MB)',\n  })\n  @ApiConsumes('multipart/form-data')\n  @ApiBody({\n    schema: {\n      type: 'object',\n      properties: {\n        file: {\n          type: 'string',\n          format: 'binary',\n        },\n      },\n    },\n    required: true,\n    description: 'file image',\n  })\n  uploadFile(\n    @UploadedFile(\n      new ParseFilePipeBuilder()\n        .addFileTypeValidator({\n          fileType: 'image',\n        })\n        .addMaxSizeValidator({\n          maxSize: 1024 * 1024 * 10,\n        })\n        .build({\n          errorHttpStatusCode: HttpStatus.BAD_REQUEST,\n        }),\n      SharpPipe,\n    )\n    file: string,\n    @Req() req: Request,\n  ) {\n    return this.filesService.uploadFile(file, req);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FilesModule.html":{"url":"modules/FilesModule.html","title":"module - FilesModule","body":"\n                   \n\n\n\n\n    Modules\n    FilesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FilesModule\n\n\n\ncluster_FilesModule_imports\n\n\n\ncluster_FilesModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nFilesModule\n\nFilesModule\n\nFilesModule -->\n\nAuthModule->FilesModule\n\n\n\n\n\nFilesService\n\nFilesService\n\nFilesModule -->\n\nFilesService->FilesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/files/files.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FilesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            FilesController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { FilesService } from './files.service';\nimport { FilesController } from './files.controller';\nimport { AuthModule } from 'src/auth/auth.module';\nimport { MulterModule } from '@nestjs/platform-express';\nimport { memoryStorage } from 'multer';\n\n@Module({\n  imports: [\n    AuthModule,\n    MulterModule.register({\n      storage: memoryStorage(),\n    }),\n  ],\n  controllers: [FilesController],\n  providers: [FilesService],\n})\nexport class FilesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FilesService.html":{"url":"injectables/FilesService.html","title":"injectable - FilesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FilesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/files.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findByName\n                            \n                            \n                                    Async\n                                uploadFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jwt: JwtStrategy)\n                    \n                \n                        \n                            \n                                Defined in src/files/files.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwt\n                                                  \n                                                        \n                                                                        JwtStrategy\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findByName\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByName(name: string, token: string, res: Response)\n                \n            \n\n\n                    \n                        \n                            Defined in src/files/files.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        uploadFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    uploadFile(file: string, req: Request)\n                \n            \n\n\n                    \n                        \n                            Defined in src/files/files.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, HttpStatus } from '@nestjs/common';\nimport { JwtStrategy } from 'src/auth/jwt.strategy';\nimport { createReadStream } from 'fs';\nimport { join } from 'path';\nimport { Response, Request } from 'express';\n\n@Injectable()\nexport class FilesService {\n  constructor(private jwt: JwtStrategy) {}\n\n  async findByName(name: string, token: string, res: Response) {\n    if (!(await this.jwt.verify(token))) {\n      res.status(HttpStatus.UNAUTHORIZED).end();\n      return;\n    }\n\n    createReadStream(join(process.env.UPLOAD_DIR, name))\n      .on('error', function () {\n        res.status(HttpStatus.NOT_FOUND).end();\n      })\n      .once('data', function () {\n        res.set('Content-Type', 'image/jpeg');\n      })\n      .on('data', function (chunk) {\n        res.write(chunk);\n      })\n      .on('end', res.end.bind(res));\n  }\n\n  async uploadFile(file: string, req: Request) {\n    return {\n      link: `${req.protocol}://${req.get('Host')}/v1/files/${file}`,\n      name: file,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GatewayModule.html":{"url":"modules/GatewayModule.html","title":"module - GatewayModule","body":"\n                   \n\n\n\n\n    Modules\n    GatewayModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_GatewayModule\n\n\n\ncluster_GatewayModule_exports\n\n\n\n\nEventGateway \n\nEventGateway \n\n\n\nGatewayModule\n\nGatewayModule\n\nEventGateway  -->\n\nGatewayModule->EventGateway \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/gateway/gateway.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Exports\n                    \n                        \n                            EventGateway\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { EventGateway } from './events.gateway';\n\n@Module({\n  providers: [EventGateway],\n  exports: [EventGateway],\n})\nexport class GatewayModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt-auth.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AuthGuard('jwt')\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy, 'jwt')\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                generateToken\n                            \n                            \n                                    Async\n                                validate\n                            \n                            \n                                    Async\n                                verify\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService, redis: RedisService, jwt: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/jwt.strategy.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        redis\n                                                  \n                                                        \n                                                                        RedisService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwt\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        generateToken\n                        \n                    \n                \n            \n            \n                \ngenerateToken(data: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/jwt.strategy.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(payload: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/jwt.strategy.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        verify\n                        \n                    \n                \n            \n            \n                \n                        \n                    verify(token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/jwt.strategy.ts:65\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException, Logger } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { RedisService } from 'src/redis/redis.service';\nimport { UsersService } from 'src/users/users.service';\nimport { TokenPayload } from './auth.model';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy, 'jwt') {\n  constructor(\n    private usersService: UsersService,\n    private redis: RedisService,\n    private jwt: JwtService,\n  ) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      secretOrKey: process.env.JWT_ACCESS_SECRET_KEY,\n    });\n  }\n\n  generateToken(data: {\n    sub?: string;\n    uid?: number;\n    name?: string;\n    email?: string;\n    avatar?: string;\n    refId?: string;\n    secret: string;\n    expiresIn: string;\n  }): string {\n    return this.jwt.sign(\n      {\n        sub: data.sub,\n        uid: data.uid,\n        name: data.name,\n        email: data.email,\n        avatar: data.avatar,\n        refId: data.refId,\n      },\n      {\n        secret: data.secret,\n        expiresIn: data.expiresIn,\n        algorithm: 'HS256',\n        issuer: process.env.JWT_ISSUER,\n      },\n    );\n  }\n\n  async validate(payload: { uid: number }) {\n    const user = await this.usersService.findById(payload.uid);\n\n    if (!user) {\n      throw new UnauthorizedException();\n    }\n\n    const loggedIn = await this.redis.get(RedisService.TOKEN + user.id);\n    if (!loggedIn) {\n      throw new UnauthorizedException();\n    }\n\n    return user;\n  }\n\n  async verify(token: string) {\n    const decoded = this.jwt.decode(token) as TokenPayload;\n    if (!decoded) {\n      Logger.log('JwtStrategy-[verify](invalid token).');\n      return false;\n    }\n\n    decoded.exp = decoded.exp * 1000;\n    if (decoded.exp \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PrismaModule.html":{"url":"modules/PrismaModule.html","title":"module - PrismaModule","body":"\n                   \n\n\n\n\n    Modules\n    PrismaModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_providers\n\n\n\ncluster_PrismaModule_exports\n\n\n\n\nPrismaService \n\nPrismaService \n\n\n\nPrismaModule\n\nPrismaModule\n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/prisma/prisma.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PrismaService } from './prisma.service';\n\n@Module({\n  providers: [PrismaService],\n  exports: [PrismaService],\n})\nexport class PrismaModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaService.html":{"url":"injectables/PrismaService.html","title":"injectable - PrismaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/prisma/prisma.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PrismaClient\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onModuleInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/prisma/prisma.service.ts:6\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, OnModuleInit } from '@nestjs/common';\nimport { PrismaClient } from '@prisma/client';\n\n@Injectable()\nexport class PrismaService extends PrismaClient implements OnModuleInit {\n  async onModuleInit() {\n    await this.$connect();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProfileController.html":{"url":"controllers/ProfileController.html","title":"controller - ProfileController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProfileController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/profile/profile.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                /v1/profile\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                get\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        get\n                        \n                    \n                \n            \n            \n                \n                        \n                    get(auth: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Get profile'})@ApiBearerAuth()@ApiOkResponse({description: 'Get profile successfully'})\n                \n            \n\n                    \n                        \n                            Defined in src/profile/profile.controller.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                auth\n                                            \n                                                        User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(auth: User, body: UserUpdate)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch()@ApiOperation({summary: 'Update profile'})@ApiBearerAuth()@ApiCreatedResponse({description: 'Update profile successfully'})\n                \n            \n\n                    \n                        \n                            Defined in src/profile/profile.controller.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                auth\n                                            \n                                                        User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            UserUpdate\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Patch, UseGuards } from '@nestjs/common';\nimport { ProfileService } from './profile.service';\nimport { JwtAuthGuard } from 'src/auth/jwt-auth.guard';\nimport { Auth } from 'src/auth/auth.decorator';\nimport { User } from '@prisma/client';\nimport { UserUpdate } from 'src/users/users.model';\nimport {\n  ApiBearerAuth,\n  ApiCreatedResponse,\n  ApiInternalServerErrorResponse,\n  ApiOkResponse,\n  ApiOperation,\n  ApiTags,\n  ApiUnauthorizedResponse,\n} from '@nestjs/swagger';\n\n@Controller('/v1/profile')\n@UseGuards(JwtAuthGuard)\n@ApiBearerAuth()\n@ApiTags('Profile')\n@ApiInternalServerErrorResponse({\n  description: 'Internal server error.',\n})\n@ApiUnauthorizedResponse({\n  description: 'Unauthorized',\n})\nexport class ProfileController {\n  constructor(private readonly profileService: ProfileService) {}\n\n  @Get()\n  @ApiOperation({ summary: 'Get profile' })\n  @ApiBearerAuth()\n  @ApiOkResponse({\n    description: 'Get profile successfully',\n  })\n  get(@Auth() auth: User) {\n    return this.profileService.self(auth);\n  }\n\n  @Patch()\n  @ApiOperation({ summary: 'Update profile' })\n  @ApiBearerAuth()\n  @ApiCreatedResponse({\n    description: 'Update profile successfully',\n  })\n  update(@Auth() auth: User, @Body() body: UserUpdate) {\n    return this.profileService.update(auth, body);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProfileModule.html":{"url":"modules/ProfileModule.html","title":"module - ProfileModule","body":"\n                   \n\n\n\n\n    Modules\n    ProfileModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProfileModule\n\n\n\ncluster_ProfileModule_providers\n\n\n\ncluster_ProfileModule_imports\n\n\n\n\nGatewayModule\n\nGatewayModule\n\n\n\nProfileModule\n\nProfileModule\n\nProfileModule -->\n\nGatewayModule->ProfileModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nProfileModule -->\n\nUsersModule->ProfileModule\n\n\n\n\n\nProfileService\n\nProfileService\n\nProfileModule -->\n\nProfileService->ProfileModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/profile/profile.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProfileService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProfileController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            GatewayModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ProfileService } from './profile.service';\nimport { ProfileController } from './profile.controller';\nimport { UsersModule } from 'src/users/users.module';\nimport { GatewayModule } from 'src/gateway/gateway.module';\n\n@Module({\n  imports: [UsersModule, GatewayModule],\n  controllers: [ProfileController],\n  providers: [ProfileService],\n})\nexport class ProfileModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProfileService.html":{"url":"injectables/ProfileService.html","title":"injectable - ProfileService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProfileService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/profile/profile.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                self\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService, events: EventGateway)\n                    \n                \n                        \n                            \n                                Defined in src/profile/profile.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        events\n                                                  \n                                                        \n                                                                        EventGateway\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        self\n                        \n                    \n                \n            \n            \n                \n                        \n                    self(auth: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/profile/profile.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                auth\n                                            \n                                                        User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(auth: User, req: UserUpdate)\n                \n            \n\n\n                    \n                        \n                            Defined in src/profile/profile.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                auth\n                                            \n                                                        User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                            UserUpdate\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { UsersService } from 'src/users/users.service';\nimport { User } from '@prisma/client';\nimport { EventGateway } from 'src/gateway/events.gateway';\nimport { UserUpdate } from 'src/users/users.model';\n\n@Injectable()\nexport class ProfileService {\n  constructor(\n    private usersService: UsersService,\n    private events: EventGateway,\n  ) {}\n\n  async self(auth: User) {\n    return await this.usersService.findById(auth.id);\n  }\n\n  async update(auth: User, req: UserUpdate) {\n    this.events.handleEvent('update:' + auth.id);\n    return await this.usersService.update(auth.id, req);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RedisModule.html":{"url":"modules/RedisModule.html","title":"module - RedisModule","body":"\n                   \n\n\n\n\n    Modules\n    RedisModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RedisModule\n\n\n\ncluster_RedisModule_exports\n\n\n\ncluster_RedisModule_providers\n\n\n\n\nRedisService \n\nRedisService \n\n\n\nRedisModule\n\nRedisModule\n\nRedisService  -->\n\nRedisModule->RedisService \n\n\n\n\n\nRedisService\n\nRedisService\n\nRedisModule -->\n\nRedisService->RedisModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/redis/redis.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RedisService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RedisService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { RedisService } from './redis.service';\nimport { CacheModule } from '@nestjs/cache-manager';\nimport type { RedisClientOptions } from 'redis';\nimport { redisStore } from 'cache-manager-redis-yet';\n\n@Module({\n  imports: [\n    CacheModule.registerAsync({\n      useFactory: async () => ({\n        store: await redisStore({\n          url: process.env.REDIS_URL,\n        }),\n      }),\n      isGlobal: true,\n    }),\n  ],\n  providers: [RedisService],\n  exports: [RedisService],\n})\nexport class RedisModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RedisService.html":{"url":"injectables/RedisService.html","title":"injectable - RedisService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RedisService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/redis/redis.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                TOKEN\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                clear\n                            \n                            \n                                    Async\n                                get\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                set\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cache: Cache)\n                    \n                \n                        \n                            \n                                Defined in src/redis/redis.service.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cache\n                                                  \n                                                        \n                                                                    Cache\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        clear\n                        \n                    \n                \n            \n            \n                \n                        \n                    clear()\n                \n            \n\n\n                    \n                        \n                            Defined in src/redis/redis.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        get\n                        \n                    \n                \n            \n            \n                \n                        \n                    get(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/redis/redis.service.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/redis/redis.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        set\n                        \n                    \n                \n            \n            \n                \n                        \n                    set(key: string, value, ttl?: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/redis/redis.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                ttl\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'TOKEN:'\n                    \n                \n                    \n                        \n                                Defined in src/redis/redis.service.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, Logger } from '@nestjs/common';\nimport { Cache } from 'cache-manager';\n\n@Injectable()\nexport class RedisService {\n  constructor(@Inject('CACHE_MANAGER') private readonly cache: Cache) {}\n\n  public static TOKEN = 'TOKEN:';\n\n  async get(key: string) {\n    const res = await this.cache.get(key);\n    Logger.log('RedisService-[get]. key:' + key + ', value:' + res);\n    return res;\n  }\n\n  async set(key: string, value: unknown, ttl?: number) {\n    Logger.log(\n      'RedisService-[set]. key:' + key + ', value:' + value + ', ttl:' + ttl,\n    );\n    await this.cache.set(key, value, ttl);\n  }\n\n  async remove(key: string) {\n    Logger.log('RedisService-[remove]. key:' + key);\n    await this.cache.del(key);\n  }\n\n  async clear() {\n    Logger.log('RedisService-[clear]');\n    await this.cache.reset();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SharpPipe.html":{"url":"injectables/SharpPipe.html","title":"injectable - SharpPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SharpPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/sharp.pipe.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        transform\n                        \n                    \n                \n            \n            \n                \n                        \n                    transform(image: Express.Multer.File)\n                \n            \n\n\n                    \n                        \n                            Defined in src/files/sharp.pipe.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                image\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, PipeTransform } from '@nestjs/common';\nimport * as path from 'path';\nimport * as sharp from 'sharp';\n\n@Injectable()\nexport class SharpPipe\n  implements PipeTransform>\n{\n  async transform(image: Express.Multer.File): Promise {\n    const randomName = Math.random().toString(36).substring(2, 15);\n    const filename = Date.now() + '_' + randomName;\n\n    await sharp(image.buffer)\n      .resize(800)\n      .webp({ effort: 3 })\n      .toFile(path.join(process.env.UPLOAD_DIR, filename));\n\n    return filename;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SignHistoryController.html":{"url":"controllers/SignHistoryController.html","title":"controller - SignHistoryController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  SignHistoryController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/sign-history/sign-history.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                sign-history\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(auth: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Get sign history'})@ApiOkResponse({description: 'Get sign history successfully'})\n                \n            \n\n                    \n                        \n                            Defined in src/sign-history/sign-history.controller.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                auth\n                                            \n                                                        User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, UseGuards } from '@nestjs/common';\nimport { SignHistoryService } from './sign-history.service';\nimport { JwtAuthGuard } from 'src/auth/jwt-auth.guard';\nimport { Auth } from 'src/auth/auth.decorator';\nimport { User } from '@prisma/client';\nimport {\n  ApiBearerAuth,\n  ApiInternalServerErrorResponse,\n  ApiOkResponse,\n  ApiOperation,\n  ApiTags,\n  ApiUnauthorizedResponse,\n} from '@nestjs/swagger';\n\n@Controller('sign-history')\n@UseGuards(JwtAuthGuard)\n@ApiTags('Sign History')\n@ApiBearerAuth()\n@ApiInternalServerErrorResponse({\n  description: 'Internal server error.',\n})\n@ApiUnauthorizedResponse({\n  description: 'Unauthorized',\n})\nexport class SignHistoryController {\n  constructor(private readonly signHistoryService: SignHistoryService) {}\n\n  @Get()\n  @ApiOperation({ summary: 'Get sign history' })\n  @ApiOkResponse({\n    description: 'Get sign history successfully',\n  })\n  findAll(@Auth() auth: User) {\n    return this.signHistoryService.findByUid(auth.id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SignHistoryModule.html":{"url":"modules/SignHistoryModule.html","title":"module - SignHistoryModule","body":"\n                   \n\n\n\n\n    Modules\n    SignHistoryModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SignHistoryModule\n\n\n\ncluster_SignHistoryModule_providers\n\n\n\ncluster_SignHistoryModule_exports\n\n\n\ncluster_SignHistoryModule_imports\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nSignHistoryModule\n\nSignHistoryModule\n\nSignHistoryModule -->\n\nPrismaModule->SignHistoryModule\n\n\n\n\n\nSignHistoryService \n\nSignHistoryService \n\nSignHistoryService  -->\n\nSignHistoryModule->SignHistoryService \n\n\n\n\n\nSignHistoryService\n\nSignHistoryService\n\nSignHistoryModule -->\n\nSignHistoryService->SignHistoryModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/sign-history/sign-history.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SignHistoryService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            SignHistoryController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SignHistoryService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { SignHistoryService } from './sign-history.service';\nimport { SignHistoryController } from './sign-history.controller';\nimport { PrismaModule } from 'src/prisma/prisma.module';\n\n@Module({\n  imports: [PrismaModule],\n  controllers: [SignHistoryController],\n  providers: [SignHistoryService],\n  exports: [SignHistoryService],\n})\nexport class SignHistoryModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SignHistoryService.html":{"url":"injectables/SignHistoryService.html","title":"injectable - SignHistoryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SignHistoryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/sign-history/sign-history.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                countByUid\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findByUid\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/sign-history/sign-history.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        countByUid\n                        \n                    \n                \n            \n            \n                \n                        \n                    countByUid(uid: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/sign-history/sign-history.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                uid\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(req: Prisma.SignHistoryUncheckedCreateInput)\n                \n            \n\n\n                    \n                        \n                            Defined in src/sign-history/sign-history.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        Prisma.SignHistoryUncheckedCreateInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/sign-history/sign-history.service.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findByUid\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByUid(uid: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/sign-history/sign-history.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                uid\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { Prisma } from '@prisma/client';\n\n@Injectable()\nexport class SignHistoryService {\n  constructor(private prisma: PrismaService) {}\n\n  async findAll() {\n    return await this.prisma.signHistory.findMany();\n  }\n\n  async findByUid(uid: number) {\n    return await this.prisma.signHistory.findMany({\n      where: {\n        uid,\n      },\n      select: {\n        device: true,\n        ip: true,\n        cdt: true,\n      },\n      orderBy: {\n        cdt: 'desc',\n      },\n    });\n  }\n\n  async countByUid(uid: number) {\n    return await this.prisma.signHistory.count({\n      where: {\n        uid,\n      },\n    });\n  }\n\n  async create(req: Prisma.SignHistoryUncheckedCreateInput) {\n    return await this.prisma.signHistory.create({\n      data: req,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SignIn.html":{"url":"classes/SignIn.html","title":"class - SignIn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SignIn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.model.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        \n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@MaxLength(50)@ApiProperty({description: 'Email of the user', type: String, required: true, maxLength: 50})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/auth.model.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@MinLength(4)@MaxLength(50)@ApiProperty({description: 'Password of the user', type: String, required: true, minLength: 4, maxLength: 50})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/auth.model.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Prisma } from '@prisma/client';\nimport { IsEmail, IsNotEmpty, MinLength, MaxLength } from 'class-validator';\n\nexport class SignIn implements Prisma.UserUpdateInput {\n  @IsEmail()\n  @MaxLength(50)\n  @ApiProperty({\n    description: 'Email of the user',\n    type: String,\n    required: true,\n    maxLength: 50,\n  })\n  email: string;\n\n  @IsNotEmpty()\n  @MinLength(4)\n  @MaxLength(50)\n  @ApiProperty({\n    description: 'Password of the user',\n    type: String,\n    required: true,\n    minLength: 4,\n    maxLength: 50,\n  })\n  password: string;\n}\n\nexport class SignUp extends SignIn implements Prisma.UserCreateInput {\n  @IsNotEmpty()\n  @MinLength(4)\n  @MaxLength(15)\n  @ApiProperty({\n    description: 'Name of the user',\n    type: String,\n    required: true,\n    minLength: 4,\n    maxLength: 15,\n  })\n  name: string;\n}\n\nexport class TokenResponse {\n  @ApiProperty({\n    description: 'Token of the user',\n    type: String,\n    required: true,\n  })\n  accessToken: string;\n  refreshToken: string;\n}\n\nexport class TokenPayload {\n  sub: string;\n  uid: number;\n  email: string;\n  avatar: string;\n  iat: number;\n  exp: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SignUp.html":{"url":"classes/SignUp.html","title":"class - SignUp","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SignUp\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            SignIn\n            \n\n            \n                Implements\n            \n            \n                        \n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@MinLength(4)@MaxLength(15)@ApiProperty({description: 'Name of the user', type: String, required: true, minLength: 4, maxLength: 15})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/auth.model.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@MaxLength(50)@ApiProperty({description: 'Email of the user', type: String, required: true, maxLength: 50})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         SignIn\n\n                            \n                        \n                    \n                        \n                                Defined in         SignIn:14\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@MinLength(4)@MaxLength(50)@ApiProperty({description: 'Password of the user', type: String, required: true, minLength: 4, maxLength: 50})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         SignIn\n\n                            \n                        \n                    \n                        \n                                Defined in         SignIn:26\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Prisma } from '@prisma/client';\nimport { IsEmail, IsNotEmpty, MinLength, MaxLength } from 'class-validator';\n\nexport class SignIn implements Prisma.UserUpdateInput {\n  @IsEmail()\n  @MaxLength(50)\n  @ApiProperty({\n    description: 'Email of the user',\n    type: String,\n    required: true,\n    maxLength: 50,\n  })\n  email: string;\n\n  @IsNotEmpty()\n  @MinLength(4)\n  @MaxLength(50)\n  @ApiProperty({\n    description: 'Password of the user',\n    type: String,\n    required: true,\n    minLength: 4,\n    maxLength: 50,\n  })\n  password: string;\n}\n\nexport class SignUp extends SignIn implements Prisma.UserCreateInput {\n  @IsNotEmpty()\n  @MinLength(4)\n  @MaxLength(15)\n  @ApiProperty({\n    description: 'Name of the user',\n    type: String,\n    required: true,\n    minLength: 4,\n    maxLength: 15,\n  })\n  name: string;\n}\n\nexport class TokenResponse {\n  @ApiProperty({\n    description: 'Token of the user',\n    type: String,\n    required: true,\n  })\n  accessToken: string;\n  refreshToken: string;\n}\n\nexport class TokenPayload {\n  sub: string;\n  uid: number;\n  email: string;\n  avatar: string;\n  iat: number;\n  exp: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TokenPayload.html":{"url":"classes/TokenPayload.html","title":"class - TokenPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TokenPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                avatar\n                            \n                            \n                                email\n                            \n                            \n                                exp\n                            \n                            \n                                iat\n                            \n                            \n                                sub\n                            \n                            \n                                uid\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        avatar\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/auth.model.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/auth.model.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        exp\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/auth.model.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        iat\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/auth.model.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sub\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/auth.model.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/auth.model.ts:55\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Prisma } from '@prisma/client';\nimport { IsEmail, IsNotEmpty, MinLength, MaxLength } from 'class-validator';\n\nexport class SignIn implements Prisma.UserUpdateInput {\n  @IsEmail()\n  @MaxLength(50)\n  @ApiProperty({\n    description: 'Email of the user',\n    type: String,\n    required: true,\n    maxLength: 50,\n  })\n  email: string;\n\n  @IsNotEmpty()\n  @MinLength(4)\n  @MaxLength(50)\n  @ApiProperty({\n    description: 'Password of the user',\n    type: String,\n    required: true,\n    minLength: 4,\n    maxLength: 50,\n  })\n  password: string;\n}\n\nexport class SignUp extends SignIn implements Prisma.UserCreateInput {\n  @IsNotEmpty()\n  @MinLength(4)\n  @MaxLength(15)\n  @ApiProperty({\n    description: 'Name of the user',\n    type: String,\n    required: true,\n    minLength: 4,\n    maxLength: 15,\n  })\n  name: string;\n}\n\nexport class TokenResponse {\n  @ApiProperty({\n    description: 'Token of the user',\n    type: String,\n    required: true,\n  })\n  accessToken: string;\n  refreshToken: string;\n}\n\nexport class TokenPayload {\n  sub: string;\n  uid: number;\n  email: string;\n  avatar: string;\n  iat: number;\n  exp: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TokenResponse.html":{"url":"classes/TokenResponse.html","title":"class - TokenResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TokenResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                accessToken\n                            \n                            \n                                refreshToken\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        accessToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Token of the user', type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/auth.model.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/auth.model.ts:50\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Prisma } from '@prisma/client';\nimport { IsEmail, IsNotEmpty, MinLength, MaxLength } from 'class-validator';\n\nexport class SignIn implements Prisma.UserUpdateInput {\n  @IsEmail()\n  @MaxLength(50)\n  @ApiProperty({\n    description: 'Email of the user',\n    type: String,\n    required: true,\n    maxLength: 50,\n  })\n  email: string;\n\n  @IsNotEmpty()\n  @MinLength(4)\n  @MaxLength(50)\n  @ApiProperty({\n    description: 'Password of the user',\n    type: String,\n    required: true,\n    minLength: 4,\n    maxLength: 50,\n  })\n  password: string;\n}\n\nexport class SignUp extends SignIn implements Prisma.UserCreateInput {\n  @IsNotEmpty()\n  @MinLength(4)\n  @MaxLength(15)\n  @ApiProperty({\n    description: 'Name of the user',\n    type: String,\n    required: true,\n    minLength: 4,\n    maxLength: 15,\n  })\n  name: string;\n}\n\nexport class TokenResponse {\n  @ApiProperty({\n    description: 'Token of the user',\n    type: String,\n    required: true,\n  })\n  accessToken: string;\n  refreshToken: string;\n}\n\nexport class TokenPayload {\n  sub: string;\n  uid: number;\n  email: string;\n  avatar: string;\n  iat: number;\n  exp: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserRequest.html":{"url":"classes/UserRequest.html","title":"class - UserRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.model.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        \n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                name\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/users.model.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/users.model.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/users.model.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Prisma } from '@prisma/client';\n\nexport class UserRequest implements Prisma.UserCreateInput {\n  name: string;\n  email: string;\n  password: string;\n}\n\nexport class UserUpdate implements Prisma.UserUpdateInput {\n  @ApiProperty({\n    description: 'Name of user',\n    example: 'John Doe',\n    required: false,\n  })\n  name?: string;\n\n  password?: string;\n\n  @ApiProperty({\n    description: 'Avatar of user',\n    example: 'https://example.com/avatar.png',\n    required: false,\n  })\n  avatar?: string;\n}\n\nexport class UserResponse implements Prisma.UserUpdateInput {\n  id: number;\n  name: string;\n  email: string;\n  password?: string;\n  avatar?: string;\n  cdt?: string | Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserResponse.html":{"url":"classes/UserResponse.html","title":"class - UserResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.model.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        \n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                avatar\n                            \n                            \n                                    Optional\n                                cdt\n                            \n                            \n                                email\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                    Optional\n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        avatar\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/users.model.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        cdt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | Date\n\n                    \n                \n                    \n                        \n                                Defined in src/users/users.model.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/users.model.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/users/users.model.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/users.model.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/users.model.ts:32\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Prisma } from '@prisma/client';\n\nexport class UserRequest implements Prisma.UserCreateInput {\n  name: string;\n  email: string;\n  password: string;\n}\n\nexport class UserUpdate implements Prisma.UserUpdateInput {\n  @ApiProperty({\n    description: 'Name of user',\n    example: 'John Doe',\n    required: false,\n  })\n  name?: string;\n\n  password?: string;\n\n  @ApiProperty({\n    description: 'Avatar of user',\n    example: 'https://example.com/avatar.png',\n    required: false,\n  })\n  avatar?: string;\n}\n\nexport class UserResponse implements Prisma.UserUpdateInput {\n  id: number;\n  name: string;\n  email: string;\n  password?: string;\n  avatar?: string;\n  cdt?: string | Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserUpdate.html":{"url":"classes/UserUpdate.html","title":"class - UserUpdate","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserUpdate\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.model.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        \n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                avatar\n                            \n                            \n                                    \n                                    Optional\n                                name\n                            \n                            \n                                    Optional\n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        avatar\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Avatar of user', example: 'https://example.com/avatar.png', required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/users.model.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Name of user', example: 'John Doe', required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/users.model.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/users.model.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Prisma } from '@prisma/client';\n\nexport class UserRequest implements Prisma.UserCreateInput {\n  name: string;\n  email: string;\n  password: string;\n}\n\nexport class UserUpdate implements Prisma.UserUpdateInput {\n  @ApiProperty({\n    description: 'Name of user',\n    example: 'John Doe',\n    required: false,\n  })\n  name?: string;\n\n  password?: string;\n\n  @ApiProperty({\n    description: 'Avatar of user',\n    example: 'https://example.com/avatar.png',\n    required: false,\n  })\n  avatar?: string;\n}\n\nexport class UserResponse implements Prisma.UserUpdateInput {\n  id: number;\n  name: string;\n  email: string;\n  password?: string;\n  avatar?: string;\n  cdt?: string | Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\ncluster_UsersModule_imports\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nPrismaModule->UsersModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { PrismaModule } from 'src/prisma/prisma.module';\n\n@Module({\n  imports: [PrismaModule],\n  providers: [UsersService],\n  exports: [UsersService],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findByEmail\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/users/users.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(req: UserRequest, selectPassword)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                            UserRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                selectPassword\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:98\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findByEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByEmail(email: string, selectPassword)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                selectPassword\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: number, selectPassword)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                selectPassword\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, req: UserUpdate, selectPassword)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:75\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                req\n                                            \n                                                            UserUpdate\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                selectPassword\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport * as bcrypt from 'bcrypt';\nimport { UserRequest, UserResponse, UserUpdate } from './users.model';\n\nexport const roundsOfHashing = 10;\n\n@Injectable()\nexport class UsersService {\n  constructor(private prisma: PrismaService) {}\n\n  async findAll(): Promise {\n    return await this.prisma.user.findMany({\n      select: {\n        id: true,\n        name: true,\n        avatar: true,\n        email: true,\n        cdt: true,\n      },\n    });\n  }\n\n  async findById(id: number, selectPassword = false): Promise {\n    return await this.prisma.user.findUnique({\n      where: { id: id },\n      select: {\n        id: true,\n        name: true,\n        avatar: true,\n        email: true,\n        password: selectPassword,\n        cdt: true,\n      },\n    });\n  }\n\n  async findByEmail(\n    email: string,\n    selectPassword = false,\n  ): Promise {\n    return await this.prisma.user.findUnique({\n      where: {\n        email,\n      },\n      select: {\n        id: true,\n        name: true,\n        avatar: true,\n        email: true,\n        password: selectPassword,\n        cdt: true,\n      },\n    });\n  }\n\n  async create(\n    req: UserRequest,\n    selectPassword = false,\n  ): Promise {\n    req.password = await bcrypt.hash(req.password, roundsOfHashing);\n    return await this.prisma.user.create({\n      data: req,\n      select: {\n        id: true,\n        name: true,\n        avatar: true,\n        email: true,\n        password: selectPassword,\n        cdt: true,\n      },\n    });\n  }\n\n  async update(\n    id: number,\n    req: UserUpdate,\n    selectPassword = false,\n  ): Promise {\n    if (req.password) {\n      req.password = await bcrypt.hash(req.password, roundsOfHashing);\n    }\n\n    return await this.prisma.user.update({\n      where: { id: id },\n      data: req,\n      select: {\n        id: true,\n        name: true,\n        avatar: true,\n        email: true,\n        password: selectPassword,\n        cdt: true,\n      },\n    });\n  }\n\n  async delete(id: number): Promise {\n    return await this.prisma.user.delete({\n      where: { id: id },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/auth.decorator.ts\n            \n            variable\n            Auth\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/auth.model.ts\n            \n            class\n            SignIn\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/auth.model.ts\n            \n            class\n            SignUp\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/auth.model.ts\n            \n            class\n            TokenPayload\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/auth/auth.model.ts\n            \n            class\n            TokenResponse\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            variable\n            roundsOfHashing\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/files/files.controller.ts\n            \n            controller\n            FilesController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/files/files.service.ts\n            \n            injectable\n            FilesService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/files/sharp.pipe.ts\n            \n            injectable\n            SharpPipe\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/gateway/events.gateway.ts\n            \n            class\n            EventGateway\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/prisma.service.ts\n            \n            injectable\n            PrismaService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/profile/profile.controller.ts\n            \n            controller\n            ProfileController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/profile/profile.service.ts\n            \n            injectable\n            ProfileService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/redis/redis.service.ts\n            \n            injectable\n            RedisService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/sign-history/sign-history.controller.ts\n            \n            controller\n            SignHistoryController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/sign-history/sign-history.service.ts\n            \n            injectable\n            SignHistoryService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/users/users.model.ts\n            \n            class\n            UserRequest\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/users/users.model.ts\n            \n            class\n            UserResponse\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/users/users.model.ts\n            \n            class\n            UserUpdate\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            variable\n            roundsOfHashing\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/cache-manager : ^2.1.0\n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/config : ^3.2.2\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/jwt : ^10.1.0\n        \n            @nestjs/mapped-types : *\n        \n            @nestjs/passport : ^10.0.0\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            @nestjs/platform-socket.io : ^10.1.3\n        \n            @nestjs/swagger : ^7.1.6\n        \n            @nestjs/websockets : ^10.1.3\n        \n            @prisma/client : ^5.1.1\n        \n            bcrypt : ^5.1.0\n        \n            cache-manager : ^5.2.3\n        \n            cache-manager-redis-store : ^3.0.1\n        \n            cache-manager-redis-yet : ^4.1.2\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.0\n        \n            passport : ^0.6.0\n        \n            passport-jwt : ^4.0.1\n        \n            redis : ^4.6.7\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^7.8.1\n        \n            sharp : ^0.32.4\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\nExample :$ npm installRunning the app\nExample :# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\nExample :# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FilesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GatewayModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PrismaModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProfileModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RedisModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SignHistoryModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_FilesModule\n\n\n\ncluster_FilesModule_providers\n\n\n\ncluster_GatewayModule\n\n\n\ncluster_GatewayModule_exports\n\n\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_PrismaModule_providers\n\n\n\ncluster_ProfileModule\n\n\n\ncluster_ProfileModule_providers\n\n\n\ncluster_RedisModule\n\n\n\ncluster_RedisModule_exports\n\n\n\ncluster_RedisModule_providers\n\n\n\ncluster_SignHistoryModule\n\n\n\ncluster_SignHistoryModule_exports\n\n\n\ncluster_SignHistoryModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nFilesModule\n\nFilesModule\n\nFilesModule -->\n\nAuthModule->FilesModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nJwtStrategy \n\nJwtStrategy \n\nJwtStrategy  -->\n\nAuthModule->JwtStrategy \n\n\n\nAppModule -->\n\nFilesModule->AppModule\n\n\n\n\n\nGatewayModule\n\nGatewayModule\n\n\n\nProfileModule\n\nProfileModule\n\nProfileModule -->\n\nGatewayModule->ProfileModule\n\n\n\nAppModule -->\n\nGatewayModule->AppModule\n\n\n\n\n\nEventGateway \n\nEventGateway \n\nEventGateway  -->\n\nGatewayModule->EventGateway \n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAuthModule -->\n\nPrismaModule->AuthModule\n\n\n\n\n\nSignHistoryModule\n\nSignHistoryModule\n\nSignHistoryModule -->\n\nPrismaModule->SignHistoryModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nPrismaModule->UsersModule\n\n\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nPrismaService \n\nPrismaService \n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\nAppModule -->\n\nProfileModule->AppModule\n\n\n\n\n\nRedisModule\n\nRedisModule\n\nAuthModule -->\n\nRedisModule->AuthModule\n\n\n\nAppModule -->\n\nRedisModule->AppModule\n\n\n\n\n\nRedisService \n\nRedisService \n\nRedisService  -->\n\nRedisModule->RedisService \n\n\n\nAuthModule -->\n\nSignHistoryModule->AuthModule\n\n\n\nAppModule -->\n\nSignHistoryModule->AppModule\n\n\n\n\n\nSignHistoryService \n\nSignHistoryService \n\nSignHistoryService  -->\n\nSignHistoryModule->SignHistoryService \n\n\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\nProfileModule -->\n\nUsersModule->ProfileModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nFilesService\n\nFilesService\n\nFilesModule -->\n\nFilesService->FilesModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\nProfileService\n\nProfileService\n\nProfileModule -->\n\nProfileService->ProfileModule\n\n\n\n\n\nRedisService\n\nRedisService\n\nRedisModule -->\n\nRedisService->RedisModule\n\n\n\n\n\nSignHistoryService\n\nSignHistoryService\n\nSignHistoryModule -->\n\nSignHistoryService->SignHistoryModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        9 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    5 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    10 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    8 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Auth   (src/.../auth.decorator.ts)\n                        \n                        \n                            roundsOfHashing   (src/.../auth.service.ts)\n                        \n                        \n                            roundsOfHashing   (src/.../users.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/auth/auth.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Auth\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n  (data: unknown, ctx: ExecutionContext) => {\n    const request = ctx.switchToHttp().getRequest();\n    return request.user as User;\n  },\n)\n                    \n                \n\n\n        \n    \n\n    src/auth/auth.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        roundsOfHashing\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n\n\n        \n    \n\n    src/users/users.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        roundsOfHashing\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
